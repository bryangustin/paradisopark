{"remainingRequest":"/Users/work/Documents/projects/paradisopark/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/work/Documents/projects/paradisopark/src/views/Timeslot.vue?vue&type=style&index=0&id=03c08305&lang=css","dependencies":[{"path":"/Users/work/Documents/projects/paradisopark/src/views/Timeslot.vue","mtime":1654593457662},{"path":"/Users/work/Documents/projects/paradisopark/node_modules/css-loader/dist/cjs.js","mtime":1650971426001},{"path":"/Users/work/Documents/projects/paradisopark/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1650971427729},{"path":"/Users/work/Documents/projects/paradisopark/node_modules/postcss-loader/src/index.js","mtime":1650971426475},{"path":"/Users/work/Documents/projects/paradisopark/node_modules/cache-loader/dist/cjs.js","mtime":1650971425034},{"path":"/Users/work/Documents/projects/paradisopark/node_modules/vue-loader-v16/dist/index.js","mtime":1650971426462}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5teWN1dG9tY2FsZW5kYXJ7CiAgYmFja2dyb3VuZDogI2ViZTZkODsKICBib3JkZXItcmFkaXVzOiAwOwogIGJvcmRlcjogbm9uZTsKICAvKmJveC1zaGFkb3c6IDBweCAzcHggMjBweCAzcHggbGlnaHRncmV5OyovCn0KLyogLnZjLXdlZWtkYXl7CiAgY29sb3I6IzJEMzc0ODsKfSAqLwoudmMtdGltZS1waWNrZXJ7CiAgdmlzaWJpbGl0eTogaGlkZGVuICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["/Users/work/Documents/projects/paradisopark/src/views/Timeslot.vue"],"names":[],"mappings":";AA0iBA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5C;AACA,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,EAAE,CAAC;AACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC/B","file":"/Users/work/Documents/projects/paradisopark/src/views/Timeslot.vue","sourceRoot":"","sourcesContent":["<template>\n  <section class=\"max-w-xl mx-auto pt-24 pb-8 px-4 sm:pt-32 sm:px-6 lg:max-w-7xl lg:px-8\">\n\n    <nav aria-label=\"Progress\" class=\"relative flex justify-center\">\n      <router-link to=\"/booking\" class=\"absolute left-0 inline-flex items-center px-3 py-2 border border-black shadow-sm text-sm leading-4 font-medium text-black bg-white hover:bg-black hover:text-white focus:outline-none focus:ring-0 focus:ring-offset-2 focus:ring-indigo-500 \">\n        <ChevronLeftIcon class=\"-ml-0.5 mr-2 h-4 w-4\" aria-hidden=\"true\" />\n        Back\n      </router-link>\n      <ol role=\"list\" class=\"flex items-center mx-auto\">\n        <li v-for=\"(step, stepIdx) in steps\" :key=\"step.name\" :class=\"[stepIdx !== steps.length - 1 ? 'pr-8 sm:pr-20' : '', 'relative']\">\n          <template v-if=\"step.status === 'complete'\">\n            <div class=\"absolute inset-0 flex items-center\" aria-hidden=\"true\">\n              <div class=\"h-0.5 w-full bg-indigo-600\" />\n            </div>\n            <router-link :to=\"step.href\" class=\"relative w-8 h-8 flex items-center justify-center bg-indigo-600 rounded-full hover:bg-indigo-900\">\n              <CheckIcon class=\"w-5 h-5 text-white\" aria-hidden=\"true\" />\n              <span class=\"sr-only\">{{ step.name }}</span>\n            </router-link>\n          </template>\n          <template v-else-if=\"step.status === 'current'\" condition=\"step.status === 'current'\">\n            <div class=\"absolute inset-0 flex items-center\" aria-hidden=\"true\">\n              <div class=\"h-0.5 w-full bg-gray-200\" />\n            </div>\n            <router-link :to=\"step.href\" class=\"relative w-8 h-8 flex items-center justify-center bg-white border-2 border-indigo-600 rounded-full\" aria-current=\"step\">\n              <span class=\"h-2.5 w-2.5 bg-indigo-600 rounded-full\" aria-hidden=\"true\" />\n              <span class=\"sr-only\">{{ step.name }}</span>\n            </router-link>\n          </template>\n          <template v-else>\n            <div class=\"absolute inset-0 flex items-center\" aria-hidden=\"true\">\n              <div class=\"h-0.5 w-full bg-gray-200\" />\n            </div>\n            <router-link :to=\"step.href\" class=\"group relative w-8 h-8 flex items-center justify-center bg-white border-2 border-gray-300 rounded-full hover:border-gray-400\">\n              <span class=\"h-2.5 w-2.5 bg-transparent rounded-full group-hover:bg-gray-300\" aria-hidden=\"true\" />\n              <span class=\"sr-only\">{{ step.name }}</span>\n            </router-link>\n          </template>\n        </li>\n      </ol>\n    </nav>\n\n<!--    <h2 class=\"text-center\">Book your wellness moment here easily and quickly</h2>-->\n    <form class=\"mt-8 lg:grid lg:grid-cols-12 lg:gap-x-12 lg:items-start xl:gap-x-16\">\n      <section aria-labelledby=\"cart-heading\" class=\"lg:col-span-7\">\n        <h2 id=\"cart-heading\" class=\"sr-only\">Items in your shopping cart</h2>\n        <div class=\"items-center bg-beige mb-4 p-4\">\n          <!-- SELECT NUMBER OF PEOPLE -->\n          <div>\n            <Listbox as=\"div\" v-model=\"selected\">\n              <ListboxLabel class=\"block text-sm font-medium text-gray-700\"> Number of people </ListboxLabel>\n              <div class=\"mt-1 relative\">\n                <ListboxButton class=\"bg-white relative w-full border border-gray-300  shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-0 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\">\n                  <span class=\"block truncate\">{{ selected.name }}</span>\n                  <span class=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                        <SelectorIcon class=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                      </span>\n                </ListboxButton>\n\n                <transition leave-active-class=\"transition ease-in duration-100\" leave-from-class=\"opacity-100\" leave-to-class=\"opacity-0\">\n                  <ListboxOptions class=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n                    <ListboxOption as=\"template\" v-for=\"person in numberOfPeopleTimeSlot\" :key=\"person.id\" :value=\"person\" v-slot=\"{ active, selected }\">\n                      <li :class=\"[active ? 'text-white bg-beige' : 'text-gray-900', 'cursor-default select-none relative py-2 pl-3 pr-9']\" v-on:click=\"checknumberOfPeople(person.value)\">\n                            <span :class=\"[selected ? 'font-semibold' : 'font-normal', 'block truncate']\">\n                              {{ person.name }}\n                            </span>\n\n                        <span v-if=\"selected\" :class=\"[active ? 'text-white' : 'text-green-500v', 'absolute inset-y-0 right-0 flex items-center pr-4']\">\n                              <CheckIcon class=\"h-5 w-5\" aria-hidden=\"true\" />\n                            </span>\n                      </li>\n                    </ListboxOption>\n                  </ListboxOptions>\n                </transition>\n              </div>\n            </Listbox>\n            <small class=\"text-gray-400\">The minimum price start for a group of 6 persons.</small>\n\n            <!-- BTN CONTACT-->\n            <div class=\"mx-auto\">\n              <div class=\"mt-4 flex mx-auto text-center\">\n                <p class=\"text-center text-sm mt-1\">More than 60 persons?</p>\n                <div class=\"text-center\">\n                  <router-link to=\"/contact\" class=\"ml-2 inline-flex items-center px-2.5 py-1.5 border border-black text-xs font-medium shadow-sm text-black bg-white hover:bg-black hover:text-white focus:outline-none focus:ring-0 focus:ring-offset-2 focus:ring-indigo-500\">\n                    <MailIcon class=\"-ml-0.5 mr-2 h-4 w-4\" aria-hidden=\"true\" />\n                    Contact us\n                  </router-link>\n                </div>\n              </div>\n            </div>\n\n          </div>\n        </div>\n\n\n        <div v-if=\"this.emptyGuests\" class=\"rounded-md bg-red-50 p-4 mb-4\">\n          <div class=\"flex\">\n            <div class=\"flex-shrink-0\">\n              <XCircleIcon class=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\n            </div>\n            <div class=\"ml-3\">\n              <p class=\"text-sm font-medium text-red-800\">{{ emptyGuests }}</p>\n            </div>\n            <div class=\"ml-auto pl-3\">\n              <div class=\"-mx-1.5 -my-1.5\">\n                <button type=\"button\" v-on:click=\"this.emptyGuests = ''\" class=\"inline-flex bg-red-50 rounded-md p-1.5 text-red-500 hover:bg-red-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-red-50 focus:ring-red-600\">\n                  <span class=\"sr-only\">Dismiss</span>\n                  <XIcon class=\"h-5 w-5\" aria-hidden=\"true\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n        <div v-if=\"this.emptyDates\" class=\"rounded-md bg-red-50 p-4 mb-4\">\n          <div class=\"flex\">\n            <div class=\"flex-shrink-0\">\n              <XCircleIcon class=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\n            </div>\n            <div class=\"ml-3\">\n              <p class=\"text-sm font-medium text-red-800\">{{ emptyDates }}</p>\n            </div>\n            <div class=\"ml-auto pl-3\">\n              <div class=\"-mx-1.5 -my-1.5\">\n                <button type=\"button\" v-on:click=\"this.emptyDates = ''\" class=\"inline-flex bg-red-50 rounded-md p-1.5 text-red-500 hover:bg-red-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-red-50 focus:ring-red-600\">\n                  <span class=\"sr-only\">Dismiss</span>\n                  <XIcon class=\"h-5 w-5\" aria-hidden=\"true\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n        <!-- DATE PICKER -->\n        <v-date-picker class=\"mycutomcalendar\"\n                       is-expanded\n                       color=\"green\"\n                       :disabled-dates='disableCalendar'\n                       :min-date='new Date()'\n                       :attributes=\"attributes\"\n                       v-model=\"date\"\n                       @click.stop\n                       mode= 'dateTime'\n                       :valid-hours=\"availableHourSlots\" is24hr\n                       :minute-increment=\"60\"\n                       v-on:click=\"input()\"\n        />\n\n        <!-- TIME SLOT CARDS -->\n        <RadioGroup v-model=\"selectedTimeSlots\">\n          <!-- <RadioGroupLabel class=\"text-base font-medium text-gray-900\"> Select a time slot </RadioGroupLabel> -->\n\n\n          <div class=\"grid grid-cols-1 gap-y-6 sm:grid-cols-3 sm:gap-x-4 bg-white mt-4 p-4\">\n            <RadioGroupOption as=\"template\" v-for=\"timeslot in timeslots\" :key=\"timeslot.start\" :value=\"timeslot\" v-slot=\"{ checked, active }\" :disabled=\"timeslot.available == 0\">\n              <div :class=\"[checked ? 'border-green-500' : 'border-gray-300', active ? 'ring-1 ring-green-500' : '', 'relative bg-white border shadow-sm p-4 flex cursor-pointer focus:outline-none']\" v-on:click=\"ex(timeslot.start, timeslot.end, timeslot.slot_id)\">\n                <div class=\"flex-1 flex\">\n                  <div class=\"flex flex-col items-center justify-center text-center text-base font-medium text-gray-900\">\n                    <RadioGroupLabel as=\"span\" class=\"text-sm font-medium text-gray-900 uppercase\">de</RadioGroupLabel>\n                    <RadioGroupLabel as=\"span\" class=\"text-sm font-medium text-gray-900 uppercase hidden\">{{ timeslot.id }}</RadioGroupLabel>\n                    <RadioGroupLabel as=\"span\" class=\"text-sm font-medium text-gray-900 uppercase hidden\">{{ timeslot.slot_id }}</RadioGroupLabel>\n                    <RadioGroupDescription as=\"span\" class=\"flex items-center text-sm text-gray-500\">{{ timeslot.start }}:00</RadioGroupDescription>\n                    <RadioGroupDescription as=\"span\" class=\"text-sm font-medium text-gray-900 uppercase\">JUSQU'Á</RadioGroupDescription>\n                    <RadioGroupDescription as=\"span\" class=\"flex items-center text-sm text-gray-500\">{{ timeslot.end }}:00</RadioGroupDescription>\n                  </div>\n                </div>\n                <LockClosedIcon v-if=\"timeslot.available == '0'\" :class=\"[checked ? 'invisible' : '', 'h-5 w-5 text-gray-500 opacity-50']\" aria-hidden=\"true\" />\n                <PlusCircleIcon v-if=\"timeslot.available == '1'\" :class=\"[checked ? 'invisible' : '', 'h-5 w-5 text-gray-500']\" aria-hidden=\"true\" />\n                <CheckCircleIcon :class=\"[!checked ? 'invisible' : '', 'h-5 w-5 text-green-500']\" aria-hidden=\"true\" />\n                <div :class=\"[active ? 'border' : 'border-1', checked ? 'border-green-500' : 'border-transparent', 'absolute -inset-px pointer-events-none']\" aria-hidden=\"true\" />\n              </div>\n            </RadioGroupOption>\n          </div>\n        </RadioGroup>\n\n      </section>\n      <!-- Order summary -->\n      <section aria-labelledby=\"summary-heading\" class=\"mt-16 bg-beige px-4 py-6 sm:p-6 lg:p-8 lg:mt-0 lg:col-span-5\">\n        <h2 id=\"summary-heading\" class=\"text-lg font-medium text-gray-900\">Order summary</h2>\n\n        <dl class=\"mt-6 space-y-4\">\n          <div class=\"flex items-center justify-between\">\n            <dt class=\"text-sm text-gray-600\">Guests</dt>\n            <dd class=\"text-sm font-medium text-gray-900\">{{ guests }}</dd>\n          </div>\n          <div v-if=\"date\" class=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\n            <dt class=\"flex text-sm text-gray-600\">\n              <span>Date</span>\n            </dt>\n            <dd class=\"text-sm font-medium text-gray-900\">{{ moment(date).format('DD-MM-YYYY') }}</dd>\n          </div>\n          <div class=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\n            <dt class=\"flex text-sm text-gray-600\">\n              <span>Total room</span>\n            </dt>\n            <dd class=\"text-sm font-medium text-gray-900\">{{ amount / 100 }}</dd>\n          </div>\n          <div class=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\n            <dt class=\"text-base font-medium text-gray-900\">Order total</dt>\n            <dd class=\"text-base font-medium text-gray-900\">{{ amount / 100 }} €</dd>\n          </div>\n        </dl>\n\n        <div class=\"mt-6\">\n          <button v-on:click=\"next( date, amount, guests)\" type=\"button\" class=\"w-full bg-white border border-black shadow-sm py-3 px-4 text-base font-medium text-black hover:bg-black hover:text-white focus:outline-none focus:ring-0 focus:ring-offset-2 focus:ring-offset-gray-50 focus:ring-indigo-500\">Next</button>\n        </div>\n\n\n        <div v-if=\"this.emptySelection\" class=\"rounded-md bg-red-50 p-4 mb-4\">\n          <div class=\"flex\">\n            <div class=\"flex-shrink-0\">\n              <XCircleIcon class=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\n            </div>\n            <div class=\"ml-3\">\n              <p class=\"text-sm font-medium text-red-800\">{{ emptySelection }}</p>\n            </div>\n            <div class=\"ml-auto pl-3\">\n              <div class=\"-mx-1.5 -my-1.5\">\n                <button type=\"button\" v-on:click=\"this.emptySelection = ''\" class=\"inline-flex bg-red-50 rounded-md p-1.5 text-red-500 hover:bg-red-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-red-50 focus:ring-red-600\">\n                  <span class=\"sr-only\">Dismiss</span>\n                  <XIcon class=\"h-5 w-5\" aria-hidden=\"true\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n\n      </section>\n    </form>\n\n  </section>\n</template>\n\n<script>\nimport moment from 'moment'\nimport 'v-calendar/dist/style.css';\nimport { ref } from 'vue'\nimport {\n  Listbox,\n  ListboxButton,\n  ListboxLabel,\n  ListboxOption,\n  ListboxOptions,\n  RadioGroup,\n  RadioGroupDescription,\n  RadioGroupLabel,\n  RadioGroupOption,\n} from '@headlessui/vue'\nimport {\n  XIcon,\n  XCircleIcon,\n  CheckIcon,\n  ChevronLeftIcon,\n  SelectorIcon,\n  MailIcon,\n  LockClosedIcon,\n  CheckCircleIcon,\n} from '@heroicons/vue/solid'\nimport {\n  PlusCircleIcon,\n}from '@heroicons/vue/outline'\nconst steps = [\n  { name: 'Step 1', href: '/timeslot', status: 'current' },\n  { name: 'Step 2', href: '/additionaltimeslot', status: 'upcoming' },\n  { name: 'Step 3', href: '#', status: 'upcoming' },\n]\nconst numberOfPeopleTimeSlot = [\n  { id: 1,  value: 0, name: 'Make your choise' },\n  { id: 2,  value: 1, name: '1' },\n  { id: 3,  value: 2, name: '2' },\n  { id: 4,  value: 3, name: '3' },\n  { id: 5,  value: 4, name: '4' },\n  { id: 6,  value: 5, name: '5' },\n  { id: 7,  value: 6, name: '6' },\n  { id: 8,  value: 7, name: '7' },\n  { id: 9,  value: 8, name: '8' },\n  { id: 10, value: 9, name: '9' },\n  { id: 11, value: 10, name: '10' },\n  { id: 12, value: 11, name: '11' },\n  { id: 13, value: 12, name: '12' },\n  { id: 14, value: 13, name: '13' },\n  { id: 15, value: 14, name: '14' },\n  { id: 16, value: 15, name: '15' },\n  { id: 17, value: 16, name: '16' },\n  { id: 18, value: 17, name: '17' },\n  { id: 19, value: 18, name: '18' },\n  { id: 20, value: 19, name: '19' },\n  { id: 21, value: 20, name: '20' },\n  { id: 22, value: 21, name: '21' },\n  { id: 23, value: 22, name: '22' },\n  { id: 24, value: 23, name: '23' },\n  { id: 25, value: 24, name: '24' },\n  { id: 26, value: 25, name: '25' },\n  { id: 27, value: 26, name: '26' },\n  { id: 28, value: 27, name: '27' },\n  { id: 29, value: 28, name: '28' },\n  { id: 30, value: 29, name: '29' },\n  { id: 31, value: 30, name: '30' },\n  { id: 32, value: 31, name: '31' },\n  { id: 33, value: 32, name: '32' },\n  { id: 34, value: 33, name: '33' },\n  { id: 35, value: 34, name: '34' },\n  { id: 36, value: 35, name: '35' },\n  { id: 37, value: 36, name: '36' },\n  { id: 38, value: 37, name: '37' },\n  { id: 39, value: 38, name: '38' },\n  { id: 40, value: 39, name: '39' },\n  { id: 41, value: 40, name: '40' },\n  { id: 42, value: 41, name: '41' },\n  { id: 43, value: 42, name: '42' },\n  { id: 44, value: 43, name: '43' },\n  { id: 45, value: 44, name: '44' },\n  { id: 46, value: 45, name: '45' },\n  { id: 47, value: 46, name: '46' },\n  { id: 48, value: 47, name: '47' },\n  { id: 49, value: 48, name: '48' },\n  { id: 50, value: 49, name: '49' },\n  { id: 51, value: 50, name: '50' },\n  { id: 52, value: 51, name: '51' },\n  { id: 53, value: 52, name: '52' },\n  { id: 54, value: 53, name: '53' },\n  { id: 55, value: 54, name: '54' },\n  { id: 56, value: 55, name: '55' },\n  { id: 57, value: 56, name: '56' },\n  { id: 58, value: 57, name: '57' },\n  { id: 59, value: 58, name: '58' },\n  { id: 60, value: 59, name: '59' },\n  { id: 61, value: 60, name: '60' },\n]\n\nexport default {\n  mounted() {\n    // this.$store.dispatch(\"getTimeslots\");\n    this.axios.get(process.env.VUE_APP_URL_API + \"api/timeslots\")\n        .then(response => {\n         this.timeslots = response.data\n        })\n\n    this.axios.post(process.env.VUE_APP_URL_API + \"api/slots\")\n        .then(response => {\n          let slots = response.data\n          this.slots = slots.map(element=>{\n            return { start: new Date(element.startdate), end: new Date(element.finishdate), starttime: element.starttime, finishtime: element.finishtime, slot: element.slot_id }\n          })\n        })\n\n    this.axios.post(process.env.VUE_APP_URL_API + \"api/fulldays\")\n        .then(response => {\n          let fulldays = response.data\n          this.fulldays = fulldays.map(element=>{\n            return { start: new Date(element.startdate), end: new Date(element.finishdate), starttime: element.starttime, finishtime: element.finishtime, slot: element.slot_id }\n          })\n          // Filter all the fulldays where the reservation takes only the first slot of the checkout day\n          let slot1 = this.fulldays.filter(it => it.slot.includes(1));\n          slot1.map(function(item){\n            let end =  new Date(item.end)\n            end.setDate(end.getDate() - 1)\n            item.end = end\n            return item;\n          })\n          // Filter all the fulldays where the the reservtion take more than first slot ( late checkout )\n          let otherSlot = this.fulldays.filter(it => it.slot  != 1);\n          // merge de result in order to correctly populate the calendar daily based ( if standard checkout book only the first slot - else book the full day )\n          let dates = [...slot1, ...otherSlot]\n          this.dates = dates\n          let disable =  [\n            dates\n          ]\n          // Block the weekend days coz on timeslot we cannot get access to them\n          let weekend = {weekdays: [6, 7,]}\n          disable[0].unshift(weekend);\n          let bookeed =  [\n            disable[0]\n          ]\n          this.disableCalendar = bookeed[0]\n        })\n    this.axios.get(process.env.VUE_APP_URL_API + \"api/products \")\n        .then(response => {\n          this.products = response.data\n        })\n  },\n  data() {\n    return {\n      timeslots:'',\n      setectedSlotId:'',\n      setectedSlotStart:'',\n      setectedSlotEnd:'',\n      emptySelection:'',\n      emptyGuests:'',\n      emptyDates:'',\n      EndOfDay:'',\n      fulldaysFinishSlot:[],\n      slots:'',\n      fulldays:'',\n      day:'',\n      availableHourSlots:[],\n      products:'',\n      amount:'',\n      guests:'',\n      disableCalendar:'',\n      selectedTimeSlots:'',\n      // timeslots:'',\n      date:'',\n      attributes: [\n        {\n          key: 'today',\n          highlight: {\n            color: 'blue',\n            fillMode: 'solid',\n          },\n          dates: new Date(),\n        },\n      ],\n    };\n  },\n  methods:{\n    input(){\n      let date = moment(this.date).format('YYYY-M-DD')\n      this.axios.get(process.env.VUE_APP_URL_API + \"api/timeslots\")\n          .then(response => {\n            this.timeslots = response.data\n          })\n      // get all the reservations for the chosen day by the finishdate ( In timeslot finish date & start date are the same - taking the finish date & time we can understand where finish the fullday reservation too )  )\n      this.axios.post(process.env.VUE_APP_URL_API + 'api/slotdisponibilityEnd ', {date}).then(response => {\n        this.day = response.data\n\n        //take slot booked slots form reservation table\n        let hourFrom = this.day.map(a=>{ return { start:a.starttime, end:a.finishtime, slot_id:a.slot_id}})\n\n        //2 - order hours min to max\n        const from = hourFrom.sort(function(a, b) {\n          return a.start - b.start;\n        })\n\n        //taking all the timeslot how set by admin in admin pabel\n        let slotsFrom = this.timeslots.map(a => { return { start:a.start, end:a.end, slot_id:a.id}})\n\n        //difference to understand available timeslot in array - free slots\n        let valuesB = from.reduce(function(a,c){a[c.start] = c.start; return a; }, {});\n        let valuesA = slotsFrom.reduce(function(a,c){a[c.start] = c.start; return a; }, {});\n        let slotsFree = slotsFrom.filter(function(c){ return !valuesB[c.start]}).concat(from.filter(function(c){ return !valuesA[c.start]}));\n\n        //adding available key set to 1 to recognise on css free slots\n        const slotsFreeActive = slotsFree.map(v => ({...v, available:1}))\n\n        // difference to understand booked timeslot in array -  booked slots\n        let valueB = from.reduce(function(a,c){a[c.start] = c.start; return a; }, {});\n        let valueA = slotsFrom.reduce(function(a,c){a[c.start] = c.start; return a; }, {});\n        let slotsTaken = slotsFrom.filter(function(c){ return valueB[c.start]}).concat(from.filter(function(c){ return !valueA[c.start]}));\n\n        //adding available key set to o to recognise on css booked slots\n        const slotsTakenInactive = slotsTaken.map(v => ({...v, available:0}))\n\n        // Mergin 2 result\n        let todaySLOTS = [...slotsFreeActive, ...slotsTakenInactive]\n\n        // Sort by min to max hour start slots\n        let todaySorted = todaySLOTS.sort(function(a, b) {\n          return a.start - b.start;\n        })\n\n\n        this.timeslots = todaySorted\n        console.log(todaySorted)\n      })\n    },\n\n    ex (start, end, id){\n\n      this.setectedSlotEnd = end\n      this.setectedSlotStart = start\n      this.setectedSlotId = id\n\n      if(this.date == '') {\n        this.emptyDates = 'Please select a valid range of days'\n      } else {\n        if(this.guests ==''){\n          this.emptyGuests = 'Please select number of guests'\n          this.date = ''\n        } else {\n          this.amount = this.products[0]['price'] * this.guests\n        }\n      }\n    },\n\n    checknumberOfPeople(e){\n      this.emptySelection = ''\n      this.emptyGuests = ''\n      this.emptyDates = ''\n      this.guests = ''\n      this.amount = ''\n      this.guests = e\n    },\n\n    next( date, amount, guests ){\n      if(this.amount == ''){\n        this.emptySelection = 'Please fill all the field necessary to complete your reservation '\n      } else {\n\n        const book =\n            {\n              date: date,\n              amount: amount,\n              guests: guests,\n              slot:this.setectedSlotId,\n              start: this.setectedSlotStart,\n              end: this.setectedSlotEnd,\n            }\n\n        this.$store.commit('setReservation', (book))\n        this.$router.push({path: '/additionaltimeslot'})\n      }\n    },\n  },\n  components: {\n    XIcon,\n    XCircleIcon,\n    CheckIcon,\n    ChevronLeftIcon,\n    SelectorIcon,\n    MailIcon,\n    LockClosedIcon,\n    CheckCircleIcon,\n    PlusCircleIcon,\n    Listbox,\n    ListboxButton,\n    ListboxLabel,\n    ListboxOption,\n    ListboxOptions,\n    RadioGroup,\n    RadioGroupDescription,\n    RadioGroupLabel,\n    RadioGroupOption,\n  },\n  setup() {\n    const selected = ref(numberOfPeopleTimeSlot[0])\n    return {\n      steps,\n      numberOfPeopleTimeSlot,\n      selected,\n      moment,\n    }\n  },\n\n  // computed: {\n  //   timeslots() {\n  //     return this.$store.state.timeslots\n  //   }\n  // },\n}\n</script>\n<style>\n.mycutomcalendar{\n  background: #ebe6d8;\n  border-radius: 0;\n  border: none;\n  /*box-shadow: 0px 3px 20px 3px lightgrey;*/\n}\n/* .vc-weekday{\n  color:#2D3748;\n} */\n.vc-time-picker{\n  visibility: hidden !important;\n}\n</style>\n"]}]}