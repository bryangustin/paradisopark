{"remainingRequest":"/Users/work/Documents/projects/paradisopark/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/work/Documents/projects/paradisopark/src/views/Fullday.vue?vue&type=style&index=0&id=3cd35ae3&lang=css","dependencies":[{"path":"/Users/work/Documents/projects/paradisopark/src/views/Fullday.vue","mtime":1650971371939},{"path":"/Users/work/Documents/projects/paradisopark/node_modules/css-loader/dist/cjs.js","mtime":1650971426001},{"path":"/Users/work/Documents/projects/paradisopark/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1650971427729},{"path":"/Users/work/Documents/projects/paradisopark/node_modules/postcss-loader/src/index.js","mtime":1650971426475},{"path":"/Users/work/Documents/projects/paradisopark/node_modules/cache-loader/dist/cjs.js","mtime":1650971425034},{"path":"/Users/work/Documents/projects/paradisopark/node_modules/vue-loader-v16/dist/index.js","mtime":1650971426462}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5teWN1c3RvbWNhbGVuZGFyewogIGJhY2tncm91bmQ6IHJnYigyNDksIDI1MCwgMjUxKTsKICBib3JkZXItcmFkaXVzOiAwOwogIGJvcmRlcjogbm9uZTsKfQovKiBDT0xPUiBXRUVLREFZICovCi8qIC52Yy13ZWVrZGF5ewogIGNvbG9yOiMyRDM3NDg7Cn0gKi8K"},{"version":3,"sources":["/Users/work/Documents/projects/paradisopark/src/views/Fullday.vue"],"names":[],"mappings":";AA+lBA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACd;AACA,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AAClB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,EAAE,CAAC","file":"/Users/work/Documents/projects/paradisopark/src/views/Fullday.vue","sourceRoot":"","sourcesContent":["<template>\n  <section class=\"max-w-xl mx-auto pt-24 pb-8 px-4 sm:pt-32 sm:px-6 lg:max-w-7xl lg:px-8\">\n    <nav aria-label=\"Progress\" class=\"relative flex justify-center\">\n      <router-link to=\"/booking\" class=\"absolute left-0 inline-flex items-center px-3 py-2 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 \">\n        <ChevronLeftIcon class=\"-ml-0.5 mr-2 h-4 w-4\" aria-hidden=\"true\" />\n        Back\n      </router-link>\n      <ol role=\"list\" class=\"flex items-center mx-auto\">\n        <li v-for=\"(step, stepIdx) in steps\" :key=\"step.name\" :class=\"[stepIdx !== steps.length - 1 ? 'pr-8 sm:pr-20' : '', 'relative']\">\n          <template v-if=\"step.status === 'complete'\">\n            <div class=\"absolute inset-0 flex items-center\" aria-hidden=\"true\">\n              <div class=\"h-0.5 w-full bg-indigo-600\" />\n            </div>\n            <router-link :to=\"step.href\" class=\"relative w-8 h-8 flex items-center justify-center bg-indigo-600 rounded-full hover:bg-indigo-900\">\n              <CheckIcon class=\"w-5 h-5 text-white\" aria-hidden=\"true\" />\n              <span class=\"sr-only\">{{ step.name }}</span>\n            </router-link>\n          </template>\n          <template v-else-if=\"step.status === 'current'\" condition=\"step.status === 'current'\">\n            <div class=\"absolute inset-0 flex items-center\" aria-hidden=\"true\">\n              <div class=\"h-0.5 w-full bg-gray-200\" />\n            </div>\n            <router-link :to=\"step.href\" class=\"relative w-8 h-8 flex items-center justify-center bg-white border-2 border-indigo-600 rounded-full\" aria-current=\"step\">\n              <span class=\"h-2.5 w-2.5 bg-indigo-600 rounded-full\" aria-hidden=\"true\" />\n              <span class=\"sr-only\">{{ step.name }}</span>\n            </router-link>\n          </template>\n          <template v-else>\n            <div class=\"absolute inset-0 flex items-center\" aria-hidden=\"true\">\n              <div class=\"h-0.5 w-full bg-gray-200\" />\n            </div>\n            <router-link :to=\"step.href\" class=\"group relative w-8 h-8 flex items-center justify-center bg-white border-2 border-gray-300 rounded-full hover:border-gray-400\">\n              <span class=\"h-2.5 w-2.5 bg-transparent rounded-full group-hover:bg-gray-300\" aria-hidden=\"true\" />\n              <span class=\"sr-only\">{{ step.name }}</span>\n            </router-link>\n          </template>\n        </li>\n      </ol>\n    </nav>\n\n    <!-- <h1 class=\"text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl\">Full day</h1>\n    <h2>Book your wellness moment here easily and quickly</h2> -->\n    <form class=\"mt-12 lg:grid lg:grid-cols-12 lg:gap-x-12 lg:items-start xl:gap-x-16\">\n      <section aria-labelledby=\"cart-heading\" class=\"lg:col-span-7\">\n        <h2 id=\"cart-heading\" class=\"sr-only\">Items in your shopping cart</h2>\n\n        <div class=\"sm:flex items-center justify-between bg-gray-50 mb-4 p-4\">\n          <!-- SELECT NUMBER OF PEOPLE -->\n          <div>\n\n            <Listbox as=\"div\" class=\"mr-1\" v-model=\"NumPeople\" >\n              <ListboxLabel class=\"block text-sm font-medium text-gray-700\"> Number of people </ListboxLabel>\n              <div class=\"mt-1 relative\">\n                <ListboxButton class=\"bg-white relative w-full border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\">\n                  <span v-if=\"NumPeople.name\" class=\"block truncate\">{{ NumPeople.name }}</span>\n                  <span v-else class=\"block truncate\">Make your Choise</span>\n                  <span class=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                    <SelectorIcon class=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                  </span>\n                </ListboxButton>\n\n                <transition leave-active-class=\"transition ease-in duration-100\" leave-from-class=\"opacity-100\" leave-to-class=\"opacity-0\">\n                  <ListboxOptions class=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n                    <ListboxOption as=\"template\" v-for=\"person in numberOfPeopleFullDay\" :key=\"person.id\" :value=\"person\" v-slot=\"{ active, selected }\">\n                      <li :class=\"[active ? 'text-white bg-indigo-600' : 'text-gray-900', 'cursor-default select-none relative py-2 pl-3 pr-9']\" v-on:click=\"checknumberOfPeople(person.value, person.name)\">\n                        <span :class=\"[selected ? 'font-semibold' : 'font-normal', 'block truncate']\">\n                          {{ person.name }}\n                        </span>\n                        <span v-if=\"selected\" :class=\"[active ? 'text-white' : 'text-indigo-600', 'absolute inset-y-0 right-0 flex items-center pr-4']\">\n                          <CheckIcon class=\"h-5 w-5\" aria-hidden=\"true\" />\n                        </span>\n                      </li>\n                    </ListboxOption>\n                  </ListboxOptions>\n                </transition>\n              </div>\n            </Listbox>\n            <small class=\"text-gray-400\">The minimum price start for a group of 6 persons.</small>\n          </div>\n          <!-- SELECT CHECKOUT -->\n          <div>\n\n            <Listbox as=\"div\" class=\"ml-1\" v-model=\" PreSelectedCheckOut\">\n              <ListboxLabel class=\"block text-sm font-medium text-gray-700\"> Checkout </ListboxLabel>\n              <div class=\"mt-1 relative\">\n                <ListboxButton class=\"bg-white relative w-full border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\">\n                  <span v-if=\" PreSelectedCheckOut.name\" class=\"block truncate\">{{  PreSelectedCheckOut.name }}</span>\n                  <span v-else class=\"block truncate\">Make your Choise</span>\n                  <span class=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                    <SelectorIcon class=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                  </span>\n                </ListboxButton>\n\n                <transition leave-active-class=\"transition ease-in duration-100\" leave-from-class=\"opacity-100\" leave-to-class=\"opacity-0\">\n                  <ListboxOptions class=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n                    <ListboxOption as=\"template\" v-for=\"time in lateCheckout\" :key=\"time.id\" :value=\"time\" v-slot=\"{ active, selected }\">\n                      <li :class=\"[active ? 'text-white bg-indigo-600' : 'text-gray-900', 'cursor-default select-none relative py-2 pl-3 pr-9']\" v-on:click=\"latecheckout(time.price, time.slot, time.start, time.end)\">\n                        <span :class=\"[selected ? 'font-semibold' : 'font-normal', 'block truncate']\">\n                          {{ time.name }}\n                        </span>\n                        <span class=\"hidden\">{{ time.start }}</span>\n                        <span class=\"hidden\">{{ time.end }}</span>\n                        <span v-if=\"selected\" :class=\"[active ? 'text-white' : 'text-indigo-600', 'absolute inset-y-0 right-0 flex items-center pr-4']\">\n                          <CheckIcon class=\"h-5 w-5\" aria-hidden=\"true\" />\n                        </span>\n                      </li>\n                    </ListboxOption>\n                  </ListboxOptions>\n                </transition>\n              </div>\n            </Listbox>\n            <small class=\"text-gray-400\">The minimum price start for a group of 8 persons.</small>\n          </div>\n        </div>\n\n\n        <!--ERROR No guests selected-->\n        <div v-if=\"this.emptyGuests\" class=\"rounded-md bg-red-50 p-4 mb-4\">\n          <div class=\"flex\">\n            <div class=\"flex-shrink-0\">\n              <XCircleIcon class=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\n            </div>\n            <div class=\"ml-3\">\n              <p class=\"text-sm font-medium text-red-800\">{{ emptyGuests }}</p>\n            </div>\n            <div class=\"ml-auto pl-3\">\n              <div class=\"-mx-1.5 -my-1.5\">\n                <button type=\"button\" v-on:click=\"clearError\" class=\"inline-flex bg-red-50 rounded-md p-1.5 text-red-500 hover:bg-red-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-red-50 focus:ring-red-600\">\n                  <span class=\"sr-only\">Dismiss</span>\n                  <XIcon class=\"h-5 w-5\" aria-hidden=\"true\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- DATE PICKER -->\n\n        <v-date-picker class=\"mycustomcalendar\"\n                       :attributes=\"data.attributes\"\n                       is-expanded\n                       is-range\n                       color=\"green\"\n                       :disabled-dates=\"disableCalendar\"\n                       :min-date='new Date()'\n                       v-model=\"range\"\n                       v-on:click=\"calculate()\"\n\n        />\n\n      </section>\n\n      <!-- Order summary -->\n      <section aria-labelledby=\"summary-heading\" class=\"mt-16 bg-gray-50 px-4 py-6 sm:p-6 lg:p-8 lg:mt-0 lg:col-span-5\">\n        <h2 id=\"summary-heading\" class=\"text-lg font-medium text-gray-900\">Order summary</h2>\n\n        <dl class=\"mt-6 space-y-4\">\n          <div class=\"flex items-center justify-between\">\n            <dt class=\"text-sm text-gray-600\">Numbers of guest</dt>\n            <dd class=\"text-sm font-medium text-gray-900\">{{ guests }}</dd>\n          </div>\n          <div v-if=\"range\" class=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\n            <dt class=\"flex items-center text-sm text-gray-600\">\n              <span>From date</span>\n            </dt>\n            <dd class=\"text-sm font-medium text-gray-900\">{{ moment(range.start).format('DD-MM-YYYY')}} </dd>\n          </div>\n          <div v-if=\"range\" class=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\n            <dt class=\"flex items-center text-sm text-gray-600\">\n              <span>To date</span>\n            </dt>\n            <dd class=\"text-sm font-medium text-gray-900\">{{ moment(range.end).format('DD-MM-YYYY')}} </dd>\n          </div>\n          <div v-if=\"onlyRoomPrice\" class=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\n            <dt class=\"flex items-center text-sm text-gray-600\">\n              <span>Room total</span>\n            </dt>\n            <dd class=\"text-sm font-medium text-gray-900\">{{ onlyRoomPrice / 100 }} €</dd>\n          </div>\n          <div v-if=\"checkoutPrice\" class=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\n            <dt class=\"flex text-sm text-gray-600\">\n              <span>Late checkout</span>\n            </dt>\n            <dd class=\"text-sm font-medium text-gray-900\">{{ checkoutPrice / 100  }} €</dd>\n          </div>\n          <div class=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\n            <dt class=\"text-base font-medium text-gray-900\">Order total</dt>\n            <dd class=\"text-base font-medium text-gray-900\">{{ amount / 100  }} €</dd>\n          </div>\n        </dl>\n\n        <div class=\"mt-6\">\n          <button v-on:click=\"next( range, amount, guests)\" type=\"button\" class=\"w-full bg-indigo-600 border border-transparent rounded-md shadow-sm py-3 px-4 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-50 focus:ring-indigo-500\">Next</button>\n        </div>\n\n\n        <!--ERROR No all the field are filled-->\n        <div v-if=\"this.emptySelection\" class=\"rounded-md bg-red-50 p-4 mb-4 mt-4\">\n          <div class=\"flex\">\n            <div class=\"flex-shrink-0\">\n              <XCircleIcon class=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\n            </div>\n            <div class=\"ml-3\">\n              <p class=\"text-sm font-medium text-red-800\">{{ emptySelection }}</p>\n            </div>\n            <div class=\"ml-auto pl-3\">\n              <div class=\"-mx-1.5 -my-1.5\">\n                <button type=\"button\" v-on:click=\"this.emptySelection = ''\" class=\"inline-flex bg-red-50 rounded-md p-1.5 text-red-500 hover:bg-red-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-red-50 focus:ring-red-600\">\n                  <span class=\"sr-only\">Dismiss</span>\n                  <XIcon class=\"h-5 w-5\" aria-hidden=\"true\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </section>\n    </form>\n\n  </section>\n</template>\n\n<script>\nimport 'v-calendar/dist/style.css';\n\nimport {\n  Listbox,\n  ListboxButton,\n  ListboxLabel,\n  ListboxOption,\n  ListboxOptions,\n} from '@headlessui/vue'\nimport {\n  CheckIcon,\n  ChevronLeftIcon,\n  SelectorIcon,\n  XCircleIcon,\n  XIcon,\n} from '@heroicons/vue/solid'\nimport moment from \"moment\";\nconst steps = [\n  { name: 'Step 1', href: '/fullday', status: 'current' },\n  { name: 'Step 2', href: '/additionalfullday', status: 'upcoming' },\n  { name: 'Step 3', href: '#', status: 'upcoming' },\n]\n\nlet data = {\n  disable:{},\n  attributes: [\n    {\n      key: 'today',\n      highlight: {\n        color: 'blue',\n        fillMode: 'solid',\n      },\n      dates: new Date(),\n    },\n  ],\n}\nexport default {\n  beforeMount() {\n\n    // Receiving groups\n    this.axios.get(process.env.VUE_APP_URL_API + \"api/groups\",)\n        .then(response => {\n          this.numberOfPeopleFullDay = response.data\n        })\n\n    // Receiving checkouts\n    this.axios.get(process.env.VUE_APP_URL_API + \"api/checkouts\",)\n        .then(response => {\n          this.lateCheckout = response.data\n        })\n\n  },\n\n  mounted() {\n    this.axios.get(process.env.VUE_APP_URL_API + \"api/timeslots\",)\n        .then(response => {\n          this.timeslots = response.data\n        })\n\n\n    // Receiving specialdays\n    this.axios.get(process.env.VUE_APP_URL_API + \"api/spcialdays\",)\n        .then(response => {\n          this.specialday = response.data\n        })\n\n    // Receiving all the timeslots already booked\n    this.axios.post(process.env.VUE_APP_URL_API + \"api/slots\")\n        .then(response => {\n          let slots = response.data\n          this.slots = slots.map(element=>{\n            return { start: new Date(element.startdate), end: new Date(element.finishdate), starttime: element.starttime, finishtime: element.finishtime, slot: element.slot_id }\n          })\n        })\n\n    this.axios.post(process.env.VUE_APP_URL_API + \"api/fulldays\")\n        .then(response => {\n          let fulldays = response.data\n          this.fulldays = fulldays.map(element=>{\n            return { start: new Date(element.startdate), end: new Date(element.finishdate), starttime: element.starttime, finishtime: element.finishtime, slot: element.slot_id }\n          })\n          // Filter all the fulldays where the reservation takes only the first slot of the checkout day\n          let slot1 = this.fulldays.filter(it => it.slot.includes(1));\n          slot1.map(function(item){\n            let end =  new Date(item.end)\n            end.setDate(end.getDate() - 1)\n            item.end = end\n            return item;\n          })\n          // Filter all the fulldays where the the reservtion take more than first slot ( late checkout )\n          let otherSlot = this.fulldays.filter(it => it.slot  != 1);\n          // merge de result in order to correctly populate the calendar daily based ( if standard checkout we can concat another fulldays reservation - else book the full day )\n          // slot1 = standard chekout , otherSlot = take all the day coz there is late checkout, this.slots = if there is a timeslot taken block the fullday\n          let dates = [...slot1, ...otherSlot, ...this.slots]\n          this.dates = dates\n          let disable =  [\n            this.dates\n          ]\n          this.disableCalendar = disable[0]\n        })\n    this.axios.get(process.env.VUE_APP_URL_API + \"api/products \")\n        .then(response => {\n          this.products = response.data\n        })\n  },\n\n\n  methods:{\n\n    latecheckout(price, slot, start, end){\n      this.onlyRoomPrice=''\n      this.amount = ''\n      this.range = ''\n      this.checkoutPrice = price\n      this.checkOutSlot = slot\n      this.checkOutStart = start\n      this.checkOutEnd = end\n    },\n\n    cons(){\n      console.log(this.range)\n    },\n\n    checknumberOfPeople(e, name){\n      this.PreSelectedNumberOfPeople = name\n      this.onlyRoomPrice=''\n      this.amount = ''\n      this.emptyDates = ''\n      this.emptyGuests = ''\n      this.axios.post(process.env.VUE_APP_URL_API + \"api/fulldays\")\n          .then(response => {\n            let fulldays = response.data\n            this.fulldays = fulldays.map(element=>{\n              return { start: new Date(element.startdate), end: new Date(element.finishdate), starttime: element.starttime, finishtime: element.finishtime, slot: element.slot_id }\n            })\n            // Filter all the fulldays where the reservation takes only the first slot of the checkout day\n            let slot1 = this.fulldays.filter(it => it.slot.includes(1));\n            slot1.map(function(item){\n              let end =  new Date(item.end)\n              end.setDate(end.getDate() - 1)\n              item.end = end\n              return item;\n            })\n            // Filter all the fulldays where the the reservtion take more than first slot ( late checkout )\n            let otherSlot = this.fulldays.filter(it => it.slot  != 1);\n            // merge de result in order to correctly populate the calendar daily based ( if standard checkout we can concat another fulldays reservation - else book the full day )\n            // slot1 = standard chekout , otherSlot = take all the day coz there is late checkout, this.slots = if there is a timeslot taken block the fullday\n            let dates = [...slot1, ...otherSlot, ...this.slots]\n            this.dates = dates\n          })\n      // passing like event the number of select number of people and apply condition weekend => less than 16 no weekend\n      if(e == \"8\" || e == \"9\" || e == \"10\"){\n        this.guests = e\n        this.amount = ''\n        this.range = ''\n        let disable =  [\n          this.dates\n        ]\n        let weekend = {weekdays: [6, 7,]}\n        disable[0].unshift(weekend);\n        let bookeed =  [\n          disable[0]\n        ]\n        this.disableCalendar = bookeed[0]\n        this.guests = e\n      } else {\n        this.guests = e\n        this.amount = ''\n        this.range = ''\n        // this.dates.shift()\n        let disable =  [\n          this.dates\n        ]\n        this.disableCalendar = disable[0]\n        this.guests = e\n      }\n    },\n\n    clearError(){\n      this.emptyGuests = ''\n      this.range = ''\n    },\n\n    calculate() {\n\n      if(this.range == '') {\n        this.emptyDates = 'Please select a valid range of days'\n      } else {\n        if(this.guests ==''){\n          this.emptyGuests = 'Please select number of guests'\n        } else {\n          // setting const = to data from DB\n          const specialday = this.specialday\n          // Formatting selected starting date\n          let startDate = moment(this.range['start']).format('MM-DD-YYYY')\n          // Formatting selected ending date\n          let toDate = moment(this.range['end']).format('MM-DD-YYYY')\n          // Filter if selected starting date OR selected ending date are inside range of special day\n          let resultProductData = specialday.filter(element => {\n            // Formatting special day starting range\n            let fromDate = element.fromMonth+'-'+element.fromDate+'-'+moment(this.range['start']).format('YYYY')\n            // Formatting special day ending range\n            let endDate = element.toMonth+'-'+element.toDate+'-'+moment(this.range['end']).format('YYYY')\n            // check condition\n            if  (  startDate >= fromDate && startDate <=  endDate ||  toDate >= fromDate && toDate <=  endDate  ){\n              // return an array with the special day period range hit by the day starting range or the day ending range\n              return true\n            }\n          });\n          if (resultProductData != ''){\n            //THERE ARE SPECIAL DATE IN THE SELECTED RANGE OF DATE\n            let difference = this.range['start'] - this.range['end']\n            let daysdifference = Math.ceil(difference / (1000 * 3600 * 24));\n            let days = Math.abs(daysdifference )\n            let amount = days * this.products[0]['price'] * this.guests\n            // Partial total wihtout late checkout\n            this.onlyRoomPrice = (((amount / 100) * this.products[0].specialdayinflation) + amount)\n            //Total\n            if(this.checkoutPrice != '') {\n              this.amount = (((amount / 100) * this.products[0].specialdayinflation) + amount) + parseInt(this.checkoutPrice)\n            } else {\n              this.amount = (((amount / 100) * this.products[0].specialdayinflation) + amount)\n            }\n          } else {\n            // NO SPECIAL DATE IN THE SELECTED RANGE OF DATE\n            // Calculate how many Friday & Saturay & Sunday in the range of reservation\n            let dDate1 = new Date(this.range['start'])\n            let dDate2 = new Date(this.range['end'])\n            //We are working with time stamps\n            let from = dDate1.getTime()\n            let to = dDate2.getTime()\n            let tempDate = new Date()\n            let count = 0;\n            //loop through each day between the dates 86400000 = 1 day\n            for(let _from = from; _from < to; _from += 86400000){\n              //set the day\n              tempDate.setTime(_from);\n              //If it is a weekend add 1 to count\n              if ((tempDate.getDay() <= 0) || (tempDate.getDay() >= 4)) {\n                count++;\n              }\n            }\n            if(count == 0){\n              //  NO WEEKEND BETWEEN RANGE OF DATE\n              // Total number of day from dates range picker\n              let difference = this.range['start'] - this.range['end']\n              let daysdifference = Math.ceil(difference / (1000 * 3600 * 24));\n              let days = Math.abs(daysdifference )\n              // Total\n              let amount = days * this.products[0]['price'] * this.guests\n              // Partial total wihtout late checkout\n              this.onlyRoomPrice = amount\n              // Total\n              if(this.checkoutPrice != '') {\n                this.amount = amount + parseInt(this.checkoutPrice)\n              } else {\n                this.amount = amount\n              }\n\n            } else {\n              // THERE IS WEEKEND BETWEEN RANGE OF DATE\n              // Total number of day from dates range picker\n              let difference = this.range['start'] - this.range['end']\n              let daysdifference = Math.ceil(difference / (1000 * 3600 * 24));\n              let days = Math.abs(daysdifference )\n              //sistem count the weekend days but reservation sistem is based on night so -1\n              let night = count -1\n              // Amount for weekend nights\n              let weekend = night * this.products[0]['price'] * this.guests\n              // Adding inflation for weekend nights\n              let weekendTotal = (((weekend / 100) * this.products[0].weekendinflation) + weekend)\n              // Number of week days\n              let weekday = days - night\n              // Amount for week nights\n              let weekdayTotal = weekday * this.products[0]['price'] * this.guests\n              // Partial total wihtout late checkout\n              this.onlyRoomPrice =weekendTotal + weekdayTotal\n              // Total\n              if(this.checkoutPrice != '') {\n                this.amount = weekendTotal + weekdayTotal + parseInt(this.checkoutPrice)\n              }\n              else{\n                this.amount = weekendTotal + weekdayTotal\n              }\n            }\n          }\n        }\n      }\n    },\n\n    next( range, amount, guests ){\n\n      if(this.amount == '' || this.onlyRoomPrice ==''){\n        this.emptySelection = 'Please fill all the field necessary to complete your reservation '\n      } else {\n\n        let fromDate = this.range.start\n        let toDate = this.range.end\n\n        if(this.checkoutPrice == '') {\n           this.checkoutPrice = 0\n        }\n        if(this.checkOutStart ==\"\"){\n          this.checkOutStart = this.lateCheckout[0]['start']\n        }\n        if(this.checkOutEnd ==\"\"){\n          this.checkOutEnd = this.lateCheckout[0]['end']\n        }\n        if(this.checkOutSlot==\"\"){\n          this.checkOutSlot = this.lateCheckout[0]['slot']\n        }\n\n        const book =\n            {\n              start: fromDate,\n              end:toDate,\n              dates: range,\n              amount: amount,\n              guests: guests,\n              slot: this.checkOutSlot,\n              onlyRoomPrice: this.onlyRoomPrice,\n              checkoutPrice: this.checkoutPrice,\n              checkOutStart:this.checkOutStart,\n              checkOutEnd: this.checkOutEnd,\n            }\n\n        // this.$store.commit('lateCheckout', (this.checkoutPrice))\n        this.$store.commit('setReservation', (book))\n        this.$router.push({path: '/additionalfullday'})\n      }\n    },\n  },\n\n  data() {\n    return {\n      lateCheckout:'',\n      numberOfPeopleFullDay:'',\n      specialday:'',\n      PreSelectedCheckOut:[{name: 'Make your choise', price: 0}],\n      NumPeople:[{name: 'Make your choise'}],\n      emptySelection:'',\n      onlyRoomPrice:'',\n      checkoutPrice:'',\n      checkOutSlot: 1,\n      checkOutStart:'',\n      checkOutEnd: '',\n      emptyGuests:'',\n      dates:'',\n      slots:'',\n      timeslots:'',\n      fulldays:'',\n      guests:'',\n      amount:'',\n      products:'',\n      disabledDays: [],\n      disableCalendar:[],\n      reservations:'',\n      range:'',\n      matchSpecialDay: '',\n    };\n  },\n  components: {\n    CheckIcon,\n    ChevronLeftIcon,\n    SelectorIcon,\n    XCircleIcon,\n    XIcon,\n    Listbox,\n    ListboxButton,\n    ListboxLabel,\n    ListboxOption,\n    ListboxOptions,\n  },\n  setup() {\n\n    return {\n      steps,\n      data,\n      moment\n    }\n  },\n}\n</script>\n<style>\n.mycustomcalendar{\n  background: rgb(249, 250, 251);\n  border-radius: 0;\n  border: none;\n}\n/* COLOR WEEKDAY */\n/* .vc-weekday{\n  color:#2D3748;\n} */\n</style>\n"]}]}