{"remainingRequest":"/Users/work/Documents/projects/paradisopark/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/work/Documents/projects/paradisopark/src/components/Fulldayreservations.vue?vue&type=style&index=0&id=c4956d58&lang=css","dependencies":[{"path":"/Users/work/Documents/projects/paradisopark/src/components/Fulldayreservations.vue","mtime":1650971371931},{"path":"/Users/work/Documents/projects/paradisopark/node_modules/css-loader/dist/cjs.js","mtime":1650971426001},{"path":"/Users/work/Documents/projects/paradisopark/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":1650971427729},{"path":"/Users/work/Documents/projects/paradisopark/node_modules/postcss-loader/src/index.js","mtime":1650971426475},{"path":"/Users/work/Documents/projects/paradisopark/node_modules/cache-loader/dist/cjs.js","mtime":1650971425034},{"path":"/Users/work/Documents/projects/paradisopark/node_modules/vue-loader-v16/dist/index.js","mtime":1650971426462}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5teWN1c3RvbWNhbGVuZGFyewogIGJhY2tncm91bmQ6IHJnYigyNDksIDI1MCwgMjUxKTsKICBib3JkZXItcmFkaXVzOiAwOwogIGJvcmRlcjogbm9uZTsKfQovKiBDT0xPUiBXRUVLREFZICovCi8qIC52Yy13ZWVrZGF5ewogIGNvbG9yOiMyRDM3NDg7Cn0gKi8K"},{"version":3,"sources":["/Users/work/Documents/projects/paradisopark/src/components/Fulldayreservations.vue"],"names":[],"mappings":";AAuqCA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACd;AACA,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AAClB,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACf,EAAE,CAAC","file":"/Users/work/Documents/projects/paradisopark/src/components/Fulldayreservations.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"max-w-5xl mx-auto top-20 py-24 px-4 sm:py-32 sm:px-6 lg:px-8\">\n    <div class=\"sm:hidden\">\n      <label for=\"tabs\" class=\"sr-only\">Select a tab</label>\n      <!-- Use an \"onChange\" listener to redirect the user to the selected tab URL. -->\n      <select id=\"tabs\" name=\"tabs\" class=\"block w-full focus:ring-indigo-500 focus:border-indigo-500 border-gray-300 rounded-md\">\n        <option v-for=\"tab in tabs\" :key=\"tab.name\" :selected=\"tab.current\">{{ tab.name }}</option>\n      </select>\n    </div>\n    <div class=\"hidden sm:block\">\n      <div class=\"border-b border-gray-200\">\n        <nav class=\"-mb-px flex\" aria-label=\"Tabs\">\n          <router-link v-for=\"tab in tabs\" :key=\"tab.name\" :to=\"tab.href\" :class=\"[tab.current ? 'border-indigo-500 text-indigo-600' : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300', 'w-1/4 py-4 px-1 text-center border-b-2 font-medium text-sm']\" :aria-current=\"tab.current ? 'page' : undefined\">\n            {{ tab.name }}\n          </router-link>\n        </nav>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"bg-white\">\n    <div class=\"max-w-7xl mx-auto py-16 px-4 sm:py-24 sm:px-6 lg:px-8\">\n      <div class=\"text-center\">\n        <h2 class=\"text-base font-semibold text-indigo-600 tracking-wide uppercase\">Pricing</h2>\n        <p class=\"mt-1 text-4xl font-extrabold text-gray-900 sm:text-5xl sm:tracking-tight lg:text-6xl\">Handle Full day reservations</p>\n        <p class=\"max-w-xl mt-5 mx-auto text-xl text-gray-500\">Start building for free, then add a site plan to go live. Account plans unlock additional features.</p>\n      </div>\n    </div>\n  </div>\n\n  <!--START RESERVATIONS FORM FOR ADMIN-->\n  <div class=\"max-w-7xl mx-auto top-20 px-4 sm:px-6 lg:px-8\">\n    <form class=\"mt-12 lg:grid lg:grid-cols-12 lg:gap-x-12 lg:items-start xl:gap-x-16\">\n      <section aria-labelledby=\"cart-heading\" class=\"lg:col-span-7\">\n        <h2 id=\"cart-heading\" class=\"sr-only\">Items in your shopping cart</h2>\n\n        <div class=\"sm:flex items-center justify-between bg-gray-50 mb-4 p-4\">\n          <!-- SELECT NUMBER OF PEOPLE -->\n          <div>\n            <Listbox as=\"div\" class=\"mr-1\" v-model=\"NumPeople\" >\n              <ListboxLabel class=\"block text-sm font-medium text-gray-700\"> Number of people </ListboxLabel>\n              <div class=\"mt-1 relative\">\n                <ListboxButton class=\"bg-white relative w-full border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\">\n                  <span v-if=\"NumPeople.name\" class=\"block truncate\">{{ NumPeople.name }}</span>\n                  <span v-else class=\"block truncate\">Make your Choise</span>\n                  <span class=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                      <SelectorIcon class=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                    </span>\n                </ListboxButton>\n\n                <transition leave-active-class=\"transition ease-in duration-100\" leave-from-class=\"opacity-100\" leave-to-class=\"opacity-0\">\n                  <ListboxOptions class=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n                    <ListboxOption as=\"template\" v-for=\"person in numberOfPeopleFullDay\" :key=\"person.id\" :value=\"person\" v-slot=\"{ active, selected }\">\n                      <li :class=\"[active ? 'text-white bg-indigo-600' : 'text-gray-900', 'cursor-default select-none relative py-2 pl-3 pr-9']\" v-on:click=\"checknumberOfPeople(person.value)\">\n                          <span :class=\"[selected ? 'font-semibold' : 'font-normal', 'block truncate']\">\n                            {{ person.name }}\n                          </span>\n\n                        <span v-if=\"selected\" :class=\"[active ? 'text-white' : 'text-indigo-600', 'absolute inset-y-0 right-0 flex items-center pr-4']\">\n                            <CheckIcon class=\"h-5 w-5\" aria-hidden=\"true\" />\n                          </span>\n                      </li>\n                    </ListboxOption>\n                  </ListboxOptions>\n                </transition>\n              </div>\n            </Listbox>\n            <small class=\"text-gray-400\">The minimum price start for a group of 6 persons.</small>\n          </div>\n          <!-- SELECT CHECKOUT -->\n          <div>\n            <Listbox as=\"div\" class=\"ml-1\" v-model=\" PreSelectedCheckOut\">\n              <ListboxLabel class=\"block text-sm font-medium text-gray-700\"> Checkout </ListboxLabel>\n              <div class=\"mt-1 relative\">\n                <ListboxButton class=\"bg-white relative w-full border border-gray-300 rounded-md shadow-sm pl-3 pr-10 py-2 text-left cursor-default focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\">\n                  <span v-if=\" PreSelectedCheckOut.name\" class=\"block truncate\">{{  PreSelectedCheckOut.name }}</span>\n                  <span v-else class=\"block truncate\">Make your Choise</span>\n                  <span class=\"absolute inset-y-0 right-0 flex items-center pr-2 pointer-events-none\">\n                      <SelectorIcon class=\"h-5 w-5 text-gray-400\" aria-hidden=\"true\" />\n                    </span>\n                </ListboxButton>\n\n                <transition leave-active-class=\"transition ease-in duration-100\" leave-from-class=\"opacity-100\" leave-to-class=\"opacity-0\">\n                  <ListboxOptions class=\"absolute z-10 mt-1 w-full bg-white shadow-lg max-h-60 rounded-md py-1 text-base ring-1 ring-black ring-opacity-5 overflow-auto focus:outline-none sm:text-sm\">\n                    <ListboxOption as=\"template\" v-for=\"time in lateCheckout\" :key=\"time.id\" :value=\"time\" v-slot=\"{ active, selected }\">\n                      <li :class=\"[active ? 'text-white bg-indigo-600' : 'text-gray-900', 'cursor-default select-none relative py-2 pl-3 pr-9']\" v-on:click=\"latecheckout(time.price, time.slot, time.start, time.end)\">\n                          <span :class=\"[selected ? 'font-semibold' : 'font-normal', 'block truncate']\">\n                            {{ time.name }}\n                          </span>\n\n                        <span v-if=\"selected\" :class=\"[active ? 'text-white' : 'text-indigo-600', 'absolute inset-y-0 right-0 flex items-center pr-4']\">\n                            <CheckIcon class=\"h-5 w-5\" aria-hidden=\"true\" />\n                          </span>\n                      </li>\n                    </ListboxOption>\n                  </ListboxOptions>\n                </transition>\n              </div>\n            </Listbox>\n            <small class=\"text-gray-400\">The minimum price start for a group of 8 persons.</small>\n          </div>\n        </div>\n\n        <!--ERROR No guests selected-->\n        <div v-if=\"this.emptyGuests\" class=\"rounded-md bg-red-50 p-4 mb-4\">\n          <div class=\"flex\">\n            <div class=\"flex-shrink-0\">\n              <XCircleIcon class=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\n            </div>\n            <div class=\"ml-3\">\n              <p class=\"text-sm font-medium text-red-800\">{{ emptyGuests }}</p>\n            </div>\n            <div class=\"ml-auto pl-3\">\n              <div class=\"-mx-1.5 -my-1.5\">\n                <button type=\"button\" v-on:click=\"clearError\" class=\"inline-flex bg-red-50 rounded-md p-1.5 text-red-500 hover:bg-red-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-red-50 focus:ring-red-600\">\n                  <span class=\"sr-only\">Dismiss</span>\n                  <XIcon class=\"h-5 w-5\" aria-hidden=\"true\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!-- DATE PICKER -->\n        <v-date-picker class=\"mycustomcalendar\"\n                       :attributes=\"data.attributes\"\n                       is-expanded\n                       is-range\n                       color=\"green\"\n                       :disabled-dates=\"disableCalendar\"\n                       :min-date='new Date()'\n                       v-model=\"range\"\n                       v-on:click=\"calculate()\"\n\n        />\n\n        <!--START ADDITIONAL RESERVATIONS FOR ADMIN-->\n\n        <div v-if=\"addAdditional\">\n          <form class=\"mt-10\">\n            <section aria-labelledby=\"cart-heading\" class=\"lg:col-span-7\">\n              <h2 id=\"cart\" class=\"sr-only\">Items in your shopping cart</h2>\n\n              <ul role=\"list\" class=\"border-t border-b border-gray-200 divide-y divide-gray-200\">\n                <li v-for=\"(product, productIdx) in additionals\" :key=\"product.id\" class=\"flex py-3 sm:py-4\" @change=\"additional()\">\n                  <div class=\"flex-shrink-0\">\n                    <img :src=\"product.image\" :alt=\"product.imageAlt\" class=\"w-16 h-16 rounded-md object-center object-cover sm:w-20 sm:h-20\" />\n                  </div>\n\n                  <div class=\"ml-4 flex-1 flex flex-col justify-between sm:ml-6\">\n                    <div class=\"pr-9 sm:grid sm:grid-cols-2 sm:gap-x-6 sm:pr-0\">\n                      <div>\n                        <div class=\"flex justify-between\">\n                          <h3 class=\"text-sm\">\n                            <a :href=\"product.href\" class=\"font-medium text-gray-700 hover:text-gray-800\">\n                              {{ product.name }}\n                            </a>\n                          </h3>\n                        </div>\n                        <div class=\"mt-1 flex text-sm\">\n                          <p v-if=\"product.description\" class=\"text-gray-500\">\n                            {{ product.description }}\n                          </p>\n                        </div>\n                        <p class=\"mt-1 text-sm font-medium text-gray-900\">{{ product.price / 100 }} €</p>\n                      </div>\n\n                      <div class=\"mt-4 sm:mt-0 sm:pr-9 flex flex-col\">\n                        <label :for=\"`quantity-${productIdx}`\" class=\"mt-3 text-sm text-gray-500\">Quantity</label>\n                        <select v-model=\"product.quantity\" :id=\"`quantity-${productIdx}`\" :name=\"`quantity-${productIdx}`\" class=\"max-w-full rounded-md border border-gray-300 py-1.5 text-base leading-5 font-medium text-gray-700 text-left shadow-sm focus:outline-none focus:ring-1 focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\">\n                          <option  value=\"0\">0</option>\n                          <option v-for=\"index in 60\" :key=\"index\" :value=\"index\">{{index}}</option>\n                        </select>\n                      </div>\n                    </div>\n\n                  </div>\n                </li>\n              </ul>\n            </section>\n          </form>\n        </div>\n\n\n        <!--END MANAGING ADDITIONALS FOR ADMIN-->\n\n      </section>\n\n      <!-- Order summary -->\n      <section aria-labelledby=\"summary-heading\" class=\"mt-16 bg-gray-50 px-4 py-6 sm:p-6 lg:p-8 lg:mt-0 lg:col-span-5\">\n        <h2 id=\"summary-heading\" class=\"text-lg font-medium text-gray-900\">Order summary</h2>\n\n        <dl class=\"mt-6 space-y-4\">\n          <div class=\"flex items-center justify-between\">\n            <dt class=\"text-sm text-gray-600\">Numbers of guest</dt>\n            <dd class=\"text-sm font-medium text-gray-900\">{{ guests }}</dd>\n          </div>\n          <div v-if=\"range\" class=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\n            <dt class=\"flex items-center text-sm text-gray-600\">\n              <span>From date</span>\n            </dt>\n            <dd class=\"text-sm font-medium text-gray-900\">{{ moment(range.start).format('DD-MM-YYYY')}} </dd>\n          </div>\n          <div v-if=\"range\" class=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\n            <dt class=\"flex items-center text-sm text-gray-600\">\n              <span>To date</span>\n            </dt>\n            <dd class=\"text-sm font-medium text-gray-900\">{{ moment(range.end).format('DD-MM-YYYY')}} </dd>\n          </div>\n          <div v-if=\"onlyRoomPrice\" class=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\n            <dt class=\"flex items-center text-sm text-gray-600\">\n              <span>Room total</span>\n            </dt>\n            <dd class=\"text-sm font-medium text-gray-900\">{{ onlyRoomPrice / 100 }} €</dd>\n          </div>\n          <div v-if=\"additionalAmount\" class=\"border-t border-gray-200 pt-4 flex items-center justify-between\" >\n            <dt class=\"flex items-center text-sm text-gray-600\">\n              <span>Total additional</span>\n            </dt>\n            <dd class=\"text-sm font-medium text-gray-900\" :id=\"additionalAmount\" >{{ additionalAmount / 100 }} €\n              <input v-model=\"additionalAmount\" class=\"hidden\">\n            </dd>\n          </div>\n          <div v-if=\"checkoutPrice\" class=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\n            <dt class=\"flex text-sm text-gray-600\">\n              <span>Late checkout</span>\n            </dt>\n            <dd class=\"text-sm font-medium text-gray-900\">{{ checkoutPrice / 100 }} €</dd>\n          </div>\n          <div class=\"border-t border-gray-200 pt-4 flex items-center justify-between\">\n            <dt class=\"text-base font-medium text-gray-900\">Order total</dt>\n            <dd class=\"text-base font-medium text-gray-900\">{{ amount / 100 }} €</dd>\n          </div>\n        </dl>\n\n        <div class=\"mt-6\">\n          <button v-if=\"addAdditional==''\" v-on:click=\"next( range, amount, guests)\" type=\"button\" class=\"w-full bg-indigo-600 border border-transparent rounded-md shadow-sm py-3 px-4 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-50 focus:ring-indigo-500\">Next</button>\n          <button v-else v-on:click=\"confirmation()\" type=\"button\" class=\"mt-4 w-full bg-red-600 border border-transparent rounded-md shadow-sm py-3 px-4 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-50 focus:ring-red-500\">Confirm</button>\n        </div>\n\n\n        <!--ERROR No all the field are filled-->\n        <div v-if=\"this.emptySelection\" class=\"rounded-md bg-red-50 p-4 mb-4 mt-4\">\n          <div class=\"flex\">\n            <div class=\"flex-shrink-0\">\n              <XCircleIcon class=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\n            </div>\n            <div class=\"ml-3\">\n              <p class=\"text-sm font-medium text-red-800\">{{ emptySelection }}</p>\n            </div>\n            <div class=\"ml-auto pl-3\">\n              <div class=\"-mx-1.5 -my-1.5\">\n                <button type=\"button\" v-on:click=\"this.emptySelection = ''\" class=\"inline-flex bg-red-50 rounded-md p-1.5 text-red-500 hover:bg-red-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-red-50 focus:ring-red-600\">\n                  <span class=\"sr-only\">Dismiss</span>\n                  <XIcon class=\"h-5 w-5\" aria-hidden=\"true\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!--ERROR sending data to DB-->\n\n        <div v-if=\"this.error\" class=\"mt-4 rounded-md bg-red-50 p-4 mb-4\">\n          <div class=\"flex\">\n            <div class=\"flex-shrink-0\">\n              <XCircleIcon class=\"h-5 w-5 text-red-400\" aria-hidden=\"true\" />\n            </div>\n            <div class=\"ml-3\">\n              <p class=\"text-sm font-medium text-red-800\">{{ error }}</p>\n            </div>\n            <div class=\"ml-auto pl-3\">\n              <div class=\"-mx-1.5 -my-1.5\">\n                <button type=\"button\" v-on:click=\"this.error = ''\" class=\"inline-flex bg-red-50 rounded-md p-1.5 text-red-500 hover:bg-red-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-red-50 focus:ring-red-600\">\n                  <span class=\"sr-only\">Dismiss</span>\n                  <XIcon class=\"h-5 w-5\" aria-hidden=\"true\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <!--Success sending data to DB-->\n        <div v-if=\"this.success\" class=\"mt-4 rounded-md bg-green-50 p-4 mb-4\">\n          <div class=\"flex\">\n            <div class=\"flex-shrink-0\">\n              <CheckIcon class=\"h-5 w-5 text-green-400\" aria-hidden=\"true\" />\n            </div>\n            <div class=\"ml-3\">\n              <p class=\"text-sm font-medium text-green-800\">{{ success }}</p>\n            </div>\n            <div class=\"ml-auto pl-3\">\n              <div class=\"-mx-1.5 -my-1.5\">\n                <button type=\"button\" v-on:click=\"this.success = ''\" class=\"inline-flex bg-green-50 rounded-md p-1.5 text-green-500 hover:bg-green-100 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-green-50 focus:ring-green-600\">\n                  <span class=\"sr-only\">Dismiss</span>\n                  <XIcon class=\"h-5 w-5\" aria-hidden=\"true\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n\n      </section>\n    </form>\n  </div>\n  <!--END RESERVATIONS FORM FOR ADMIN-->\n\n\n  <!--START MANAGING RESERVATIONS FOR ADMIN-->\n\n\n\n  <div class=\"max-w-7xl mx-auto top-20 py-24 px-4 sm:py-32 sm:px-6 lg:px-8\">\n    <div class=\"flex flex-col mt-10\" style=\"max-height: 200Vh\">\n      <h1 class=\"mt-10 font-bold text-3xl px-4\" id=\"order\">Commandes actives</h1>\n      <button type=\"button\" @click=\"refresh()\"  class=\"my-2 mx-4 inline-flex items-center px-2 py-2 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-full text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\">\n        <RefreshIcon class=\"h-4 w-4 mr-2\" aria-hidden=\"true\" />\n        <span>Refresh orders</span>\n      </button>\n\n      <!--  start search box-->\n\n      <div class=\"px-4\">\n        <label for=\"first-name\" class=\"mt-5 block text-sm font-medium text-gray-700\">\n          Recherche par identifiant de commande\n        </label>\n        <input type=\"search\" v-model=\"searchQuery\" name=\"\"  class=\"mt-1 appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm\" placeholder=\"Enter a search here!\" />\n      </div>\n\n      <div>\n        <p class=\"mb-2 text-right\" v-if=\"searchQuery && filterOrders.length > 1 \">{{filterOrders.length}} results</p>\n        <div v-if=\"!searchQuery\"></div>\n\n        <div v-else class=\"border-2 border-red-600 mt-2 overflow-hidden\">\n          <div v-for=\"order in filterOrders\" :key=\"order.id\" class=\"py-3 border-b-4 border-indigo-600 mb-2\" >\n            <div class=\"bg-white py-3 border-t border-b border-gray-200 shadow-sm sm:border\">\n              <div class=\"py-6 px-4 sm:px-6 lg:grid lg:grid-cols-12 lg:gap-x-8 lg:p-8\">\n                <div class=\"sm:flex lg:col-span-7 border-b \">\n\n                  <div class=\"mt-6 sm:mt-0 sm:ml-6\">\n                    <h1 class=\"text-base font-xlarge text-gray-900\">\n                      Commande n° {{ order.id }}\n                    </h1>\n                    <p class=\"text-gray-500 font-medium\">blabla</p>\n                  </div>\n                </div>\n\n\n                <div class=\"sm:flex lg:col-span-7 mt-5\">\n                  <dl class=\"grid grid-cols-2 gap-x-6 text-sm\">\n                    <div>\n                      <dt class=\"font-medium text-gray-900\">From:</dt>\n                      <dd class=\"text-gray-500\">\n                        {{moment(order.startdate).format('DD-MM-YYYY')}}\n                      </dd>\n                      <dt class=\"font-medium text-gray-900 mt-3\">Number of guests:</dt>\n                      <dd class=\"text-gray-500\">\n                        <span class=\"block\">{{order.guests}}</span>\n                      </dd>\n                    </div>\n                    <div>\n                      <dt class=\"font-medium text-gray-900\">To:</dt>\n                      <dd class=\"text-gray-500 space-y-3\">\n                        <p>\n                          {{moment(order.finishdate).format('DD-MM-YYYY')}}\n                        </p>\n                      </dd>\n                      <dt class=\"mt-3 font-medium text-gray-900\">Checkout time:</dt>\n                      <dd class=\"text-gray-500 space-y-3\">\n                        <p>\n                          {{order.starttime}}:00\n                        </p>\n                      </dd>\n                    </div>\n                  </dl>\n                </div>\n\n                <div class=\"mt-6 lg:mt-0 lg:col-span-5 lg:mt-5\">\n                  <dl class=\"grid grid-cols-2 gap-x-6 text-sm\">\n                    <div>\n                      <dt class=\"font-medium text-gray-900\">Additionals:</dt>\n                      <dd v-for=\"extra in order.extras\" v-bind:key=\"extra.id\" class=\"text-gray-500\">\n                        <span class=\"block\">{{extra.name}}: {{extra.quantity}}</span>\n                      </dd>\n                    </div>\n                  </dl>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"bg-gray-100 py-6 px-4 sm:px-6 lg:px-8 lg:py-8 lg:grid lg:grid-cols-12 lg:gap-x-8\">\n              <dl class=\"grid grid-cols-2 gap-6 text-sm sm:grid-cols-2 md:gap-x-8 lg:col-span-7\">\n                <div v-if=\"order.user\">\n                  <dt class=\"font-medium text-gray-900\">User account:</dt>\n                  <dd class=\"mt-3 text-gray-500\">\n                    <span class=\"block\">{{order.user.name}}</span>\n                    <span class=\"block\">{{order.user.email}}</span>\n                  </dd>\n                </div>\n                <div v-else>\n                  <dt class=\"font-medium text-gray-900\">User account:</dt>\n                  <dd class=\"mt-3 text-gray-500\">\n                    <span class=\"block\">This user has been deleted</span>\n                  </dd>\n                </div>\n                <div>\n                  <dt class=\"font-medium text-gray-900\">Informations de paiement:</dt>\n                  <div class=\"mt-3\">\n                    <dd class=\"-ml-4 -mt-4 flex flex-wrap\">\n\n                      <div class=\"ml-4 mt-4\">\n                        <p class=\"text-gray-500\">\n                          <CreditCardIcon class=\"h-6 w-6\"></CreditCardIcon>\n                        </p>\n                        <p class=\"text-gray-500\">\n                          Brand:  <span class=\"uppercase\">{{ order.cardBrand }}</span>\n                        </p>\n                        <p class=\"text-gray-500\">\n                          Termine par: {{ order.lastFour }}\n                        </p>\n                        <p class=\"text-gray-500\">\n                          Expire: {{order.expire}}\n                        </p>\n                      </div>\n                    </dd>\n                  </div>\n                </div>\n              </dl>\n\n              <dl class=\"mt-8 divide-y divide-gray-200 text-sm lg:mt-0 lg:col-span-5\">\n                <div class=\"pt-4 flex items-center justify-between\">\n                  <dt class=\"font-medium text-gray-900\">ID transaction:</dt>\n                  <dd class=\"font-medium text-indigo-600\">{{ order.transactionID }}</dd>\n                </div>\n                <div class=\"pt-4 flex items-center justify-between\">\n                  <dt class=\"font-medium text-gray-900\">Total de la commande</dt>\n                  <dd class=\"font-medium text-indigo-600\">€ {{order.amount/100}}</dd>\n                </div>\n                <div class=\"sm:flex p-2 text-right mt-2\">\n                  <div class=\"ml-2  md:mt-0 lg:mt-0 text-right\">\n                    <button type=\"button\" @click=\"removeOrder(order.id, index)\" class=\"inline-flex items-center p-2 border border-transparent rounded-full shadow-sm text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 text-right\">\n                      <TrashIcon class=\"h-4 w-4\" aria-hidden=\"true\" />\n                    </button>\n                  </div>\n                </div>\n              </dl>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!--  end search box-->\n\n      <div class=\"-my-2 overflow-x-auto lg:-mx-8 mt-5\">\n        <div class=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n          <div class=\"shadow overflow-hidden border-b border-gray-200 sm:rounded-lg\">\n            <main class=\"mx-auto\">\n              <div class=\"bg-gray-50\">\n                <div class=\"max-w-7xl mx-auto pb-12 px-4 sm:pb-16 sm:px-6 lg:px-8\">\n                  <div class=\"mx-auto divide-y-2 divide-gray-200\">\n                    <dl class=\"mt-6 space-y-6 divide-y divide-gray-200\">\n                      <Disclosure as=\"div\" v-for=\"order in sortedOrders\" :key=\"order.id\" class=\"pt-6\" v-slot=\"{ open }\">\n                        <dt class=\"text-lg\">\n                          <DisclosureButton class=\"text-left w-full flex justify-between items-start text-gray-400\">\n                            <p class=\"text-sm font-medium text-indigo-600 truncate\">\n                              <span class=\"text-sm font-medium text-gray-600 truncate\">Reference order n° :</span>\n                              {{order.id}}\n                            </p>\n                            <p class=\"text-sm font-medium text-indigo-600 truncate\">\n                              <span class=\"text-sm font-medium text-gray-600 truncate\">From :</span>\n                              {{moment(order.startdate).format('DD-MM-YYYY')}}\n                            </p>\n                            <p class=\"text-sm font-medium text-indigo-600 truncate\">\n                              <span class=\"text-sm font-medium text-gray-600 truncate\">To :</span>\n                              {{moment(order.finishdate).format('DD-MM-YYYY')}}\n                            </p>\n                            <span class=\"ml-6 h-7 flex items-center\">\n                              <ChevronDownIcon :class=\"[open ? '-rotate-180' : 'rotate-0', 'h-6 w-6 transform']\" aria-hidden=\"true\" />\n                            </span>\n                          </DisclosureButton>\n                        </dt>\n                        <DisclosurePanel as=\"dd\" class=\"mt-2\">\n                          <div class=\"py-3 border-b-4 border-indigo-600 \" >\n                            <div class=\"bg-white py-3 border-t border-b border-gray-200 shadow-sm sm:border\">\n                              <div class=\"py-6 px-4 sm:px-6 lg:grid lg:grid-cols-12 lg:gap-x-8 lg:p-8\">\n                                <div class=\"sm:flex lg:col-span-7 border-b \">\n                                  <div class=\"mt-6 mb-1 sm:mt-0\">\n                                    <h1 class=\"text-base font-xlarge text-gray-900\">\n                                      Référence de l'achat n° {{ order.id }}\n                                    </h1>\n                                    <p class=\"text-gray-500 font-medium\">blabla</p>\n                                  </div>\n                                </div>\n                                <div class=\"sm:flex lg:col-span-7 mt-5\">\n                                  <dl class=\"grid grid-cols-2 gap-x-6 text-sm\">\n                                    <div>\n                                      <dt class=\"font-medium text-gray-900\">From:</dt>\n                                      <dd class=\"text-gray-500\">\n                                        <span class=\"block\">\n                                          {{moment(order.finishdate).format('DD-MM-YYYY')}}\n                                        </span>\n                                      </dd>\n                                      <dt class=\"font-medium text-gray-900 mt-3\">Number of guests:</dt>\n                                      <dd class=\"text-gray-500\">\n                                        <span class=\"block\">{{order.guests}}</span>\n                                      </dd>\n                                    </div>\n                                    <div>\n                                      <dt class=\"font-medium text-gray-900\">To:</dt>\n                                      <dd class=\"text-gray-500 space-y-3\">\n                                        <p>\n                                          {{moment(order.startdate).format('DD-MM-YYYY')}}\n                                        </p>\n                                      </dd>\n                                      <dt class=\"mt-3 font-medium text-gray-900\">Checkout time:</dt>\n                                      <dd class=\"text-gray-500 space-y-3\">\n                                        <p>\n                                          {{order.starttime}}:00\n                                        </p>\n                                      </dd>\n                                    </div>\n                                  </dl>\n                                </div>\n\n                                <div class=\"mt-6 lg:mt-0 lg:col-span-5 lg:mt-5\">\n                                  <dl class=\"grid grid-cols-2 gap-x-6 text-sm\">\n                                    <div>\n                                      <dt class=\"font-medium text-gray-900\">Additionals:</dt>\n                                      <dd v-for=\"extra in order.extras\" v-bind:key=\"extra.id\" class=\"text-gray-500\">\n                                        <span class=\"block\">{{extra.name}}: {{extra.quantity}}</span>\n                                      </dd>\n                                    </div>\n                                  </dl>\n                                </div>\n                              </div>\n                            </div>\n\n                            <div class=\"bg-gray-100 py-6 px-4 sm:px-6 lg:px-8 lg:py-8 lg:grid lg:grid-cols-12 lg:gap-x-8\">\n                              <dl class=\"grid grid-cols-2 gap-6 text-sm sm:grid-cols-2 md:gap-x-8 lg:col-span-7\">\n                                <div v-if=\"order.user\">\n                                  <dt class=\"font-medium text-gray-900\">User account:</dt>\n                                  <dd class=\"mt-3 text-gray-500\">\n                                    <span class=\"block\">{{order.user.name}}</span>\n                                    <span class=\"block\">{{order.user.email}}</span>\n                                  </dd>\n                                </div>\n                                <div v-else>\n                                  <dt class=\"font-medium text-gray-900\">User account:</dt>\n                                  <dd class=\"mt-3 text-gray-500\">\n                                    <span class=\"block\">This user has been deleted</span>\n                                  </dd>\n                                </div>\n                                <div>\n                                  <dt class=\"font-medium text-gray-900\">Payment information:</dt>\n                                  <div class=\"mt-3\">\n                                    <dd class=\"-ml-4 -mt-4 flex flex-wrap\">\n\n                                      <div class=\"ml-4 mt-4\">\n                                        <p class=\"text-gray-500\">\n                                          <CreditCardIcon class=\"h-6 w-6\"></CreditCardIcon>\n                                        </p>\n                                        <p class=\"text-gray-500\">\n                                          Brand:  <span class=\"uppercase\">{{order.cardBrand}}</span>\n                                        </p>\n                                        <p class=\"text-gray-500\">\n                                          Ending with: {{order.lastFour}}\n                                        </p>\n                                        <p class=\"text-gray-500\">\n                                          Expire: {{order.expire}}\n                                        </p>\n                                      </div>\n                                    </dd>\n                                  </div>\n                                </div>\n                              </dl>\n\n                              <dl class=\"mt-8 divide-y divide-gray-200 text-sm lg:mt-0 lg:col-span-5\">\n                                <div class=\"pt-4 flex items-center justify-between\">\n                                  <dt class=\"font-medium text-gray-900\">ID trans:</dt>\n                                  <dd class=\"font-medium text-indigo-600\">{{order.transactionID}}</dd>\n                                </div>\n                                <div class=\"pt-4 flex items-center justify-between\">\n                                  <dt class=\"font-medium text-gray-900\">Total de la commande</dt>\n                                  <dd class=\"font-medium text-indigo-600\">€ {{order.amount/100}}</dd>\n                                </div>\n                                <div class=\"sm:flex p-2 text-right mt-2\">\n                                  <div class=\"ml-2  md:mt-0 lg:mt-0 text-right\">\n                                    <button type=\"button\" @click=\"removeOrder(order.id, index)\" class=\"inline-flex items-center p-2 border border-transparent rounded-full shadow-sm text-white bg-red-600 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 text-right\">\n                                      <TrashIcon class=\"h-4 w-4\" aria-hidden=\"true\" />\n                                    </button>\n                                  </div>\n                                </div>\n                              </dl>\n                            </div>\n                          </div>\n                        </DisclosurePanel>\n                      </Disclosure>\n                    </dl>\n                  </div>\n                </div>\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</template>\n\n<script>\nimport { CreditCardIcon, ChevronDownIcon, TrashIcon, RefreshIcon } from '@heroicons/vue/outline'\nimport { Disclosure, DisclosureButton, DisclosurePanel,Listbox, ListboxButton, ListboxLabel, ListboxOption, ListboxOptions, } from '@headlessui/vue'\nimport moment from 'moment'\nimport 'v-calendar/dist/style.css';\nimport {CheckIcon, SelectorIcon, XCircleIcon, XIcon,} from '@heroicons/vue/solid'\n\n\nconst tabs = [\n  { name: 'My Account', href: '/dashboard', current: false },\n  { name: 'Timeslot reservations', href: '/timeslotreservations', current: false },\n  { name: 'Full day reservations', href: '/fulldayreservations', current: true },\n  { name: 'Price & date options', href: '/pricedateoptions', current: false },\n  { name: 'Additional options', href: '/additionaloptions', current: false },\n]\n\nlet data = {\n  disable:{},\n  attributes: [\n    {\n      key: 'today',\n      highlight: {\n        color: 'blue',\n        fillMode: 'solid',\n      },\n      dates: new Date(),\n    },\n  ],\n}\n\nexport default {\n\n\n  mounted() {\n\n    // Receiving specialdays\n    this.axios.get(process.env.VUE_APP_URL_API + \"api/spcialdays\",)\n        .then(response => {\n          this.specialday = response.data\n        })\n\n\n    // this.axios.post(process.env.VUE_APP_URL_API + \"api/fulldays\")\n    //     .then(response => {\n    //       this.orders = response.data\n    //     })\n\n    this.axios.get(process.env.VUE_APP_URL_API + \"api/timeslots\",)\n        .then(response => {\n          this.timeslots = response.data\n        })\n\n    // Receiving all the additional information\n    this.axios.get(process.env.VUE_APP_URL_API + \"api/additionals\")\n        .then(response => {\n          let additionals = response.data\n          this.additionals = additionals.map(element=>{\n            return {id:element.id, name: element.name, description: element.description, price:element.price, image:element.image, language:element.language, quantity: 0 }\n          })\n        })\n\n    // Receiving all the timeslots already booked formatted for calendar\n    this.axios.post(process.env.VUE_APP_URL_API + \"api/slots\")\n        .then(response => {\n          let slots = response.data\n          this.slots = slots.map(element=>{\n            return { start: new Date(element.startdate), end: new Date(element.finishdate), starttime: element.starttime, finishtime: element.finishtime, slot: element.slot_id }\n          })\n        })\n\n    // Receiving all the fullday already booked formatted for calendar\n    this.axios.post(process.env.VUE_APP_URL_API + \"api/fulldays\")\n        .then(response => {\n          let fulldays = response.data\n          this.fulldays = fulldays.map(element=>{\n            return { start: new Date(element.startdate), end: new Date(element.finishdate), starttime: element.starttime, finishtime: element.finishtime, slot: element.slot_id }\n          })\n          // Filter all the fulldays where the reservation takes only the first slot of the checkout day\n          let slot1 = this.fulldays.filter(it => it.slot.includes(1));\n          slot1.map(function(item){\n            let end =  new Date(item.end)\n            end.setDate(end.getDate() - 1)\n            item.end = end\n            return item;\n          })\n          // Filter all the fulldays where the the reservtion take more than first slot ( late checkout )\n          let otherSlot = this.fulldays.filter(it => it.slot  != 1);\n          // merge de result in order to correctly populate the calendar daily based ( if standard checkout we can concat another fulldays reservation - else book the full day )\n          // slot1 = standard chekout , otherSlot = take all the day coz there is late checkout, this.slots = if there is a timeslot taken block the fullday\n          let dates = [...slot1, ...otherSlot, ...this.slots]\n          this.dates = dates\n          let disable =  [\n            this.dates\n          ]\n          this.disableCalendar = disable[0]\n        })\n\n    // ROOMS DATA\n    this.axios.get(process.env.VUE_APP_URL_API + \"api/products \")\n        .then(response => {\n          this.products = response.data\n        })\n\n    this.fetchOrders();\n  },\n\n\n  beforeMount(){\n\n    this.axios.post(process.env.VUE_APP_URL_API + 'api/fulldaysadmin')\n        .then(response =>\n            this.orders = response.data\n        )\n\n    // Receiving groups\n    this.axios.get(process.env.VUE_APP_URL_API + \"api/groups\",)\n        .then(response => {\n          this.numberOfPeopleFullDay = response.data\n        })\n\n    // Receiving checkouts\n    this.axios.get(process.env.VUE_APP_URL_API + \"api/checkouts\",)\n        .then(response => {\n          this.lateCheckout = response.data\n        })\n  },\n\n  computed: {\n    setUser:{\n      get(){\n        return this.$store.state.setUser\n      }\n    },\n\n    secondstage:{\n      get(){\n        return this.$store.state.reservation\n      },\n    },\n\n    filterOrders(){\n      return this.orders.filter(order => order.id == this.searchQuery)\n    },\n\n    /* eslint-disable */\n    sortedOrders: function() {\n      this.orders.sort( ( a, b) => {\n        return new Date(b.id) - new Date(a.id);\n      });\n      return this.orders;\n    }\n    /* eslint-enable */\n  },\n\n  methods: {\n    fetchOrders(){\n      this.axios.post(process.env.VUE_APP_URL_API + 'api/fulldaysadmin')\n          .then(response =>\n              this.orders = response.data\n          )\n    },\n\n    /* eslint-disable */\n    removeOrder(orderID, index) {\n      this.axios.delete(process.env.VUE_APP_URL_API + \"api/reservations/\" + orderID)\n          .then(response => {\n            this.orders.splice(index, 1)\n          })\n\n          .catch(error => {\n            console.log(error);\n          })\n      /* eslint-enable */\n    },\n\n    latecheckout(price, slot, start, end){\n      this.onlyRoomPrice=''\n      this.amount = ''\n      this.range = ''\n      this.checkoutPrice = price\n      this.checkOutSlot = slot\n      this.checkOutStart = start\n      this.checkOutEnd = end\n    },\n\n    cons(){\n      console.log(this.range)\n    },\n\n    checknumberOfPeople(e){\n      this.onlyRoomPrice=''\n      this.amount = ''\n      this.emptyDates = ''\n      this.emptyGuests = ''\n      this.axios.post(process.env.VUE_APP_URL_API + \"api/fulldays\")\n          .then(response => {\n            let fulldays = response.data\n            this.fulldays = fulldays.map(element=>{\n              return { start: new Date(element.startdate), end: new Date(element.finishdate), starttime: element.starttime, finishtime: element.finishtime, slot: element.slot_id }\n            })\n            // Filter all the fulldays where the reservation takes only the first slot of the checkout day\n            let slot1 = this.fulldays.filter(it => it.slot.includes(1));\n            slot1.map(function(item){\n              let end =  new Date(item.end)\n              end.setDate(end.getDate() - 1)\n              item.end = end\n              return item;\n            })\n            // Filter all the fulldays where the the reservtion take more than first slot ( late checkout )\n            let otherSlot = this.fulldays.filter(it => it.slot  != 1);\n            // merge de result in order to correctly populate the calendar daily based ( if standard checkout we can concat another fulldays reservation - else book the full day )\n            // slot1 = standard chekout , otherSlot = take all the day coz there is late checkout, this.slots = if there is a timeslot taken block the fullday\n            let dates = [...slot1, ...otherSlot, ...this.slots]\n            this.dates = dates\n          })\n      // passing like event the number of select number of people and apply condition weekend => less than 16 no weekend\n      if(e == \"8\" || e == \"9\" || e == \"10\"){\n        this.guests = e\n        this.amount = ''\n        this.range = ''\n        let disable =  [\n          this.dates\n        ]\n        let weekend = {weekdays: [6, 7,]}\n        disable[0].unshift(weekend);\n        let bookeed =  [\n          disable[0]\n        ]\n        this.disableCalendar = bookeed[0]\n        this.guests = e\n      } else {\n        this.guests = e\n        this.amount = ''\n        this.range = ''\n        // this.dates.shift()\n        let disable =  [\n          this.dates\n        ]\n        this.disableCalendar = disable[0]\n        this.guests = e\n      }\n    },\n\n    clearError(){\n      this.emptyGuests = ''\n      this.range = ''\n    },\n\n\n    calculate() {\n\n      if(this.range == '') {\n        this.emptyDates = 'Please select a valid range of days'\n      } else {\n        if(this.guests ==''){\n          this.emptyGuests = 'Please select number of guests'\n        } else {\n          // setting const = to data from DB\n          const specialday = this.specialday\n          // Formatting selected starting date\n          let startDate = moment(this.range['start']).format('MM-DD-YYYY')\n          // Formatting selected ending date\n          let toDate = moment(this.range['end']).format('MM-DD-YYYY')\n          // Filter if selected starting date OR selected ending date are inside range of special day\n          let resultProductData = specialday.filter(element => {\n            // Formatting special day starting range\n            let fromDate = element.fromMonth+'-'+element.fromDate+'-'+moment(this.range['start']).format('YYYY')\n            // Formatting special day ending range\n            let endDate = element.toMonth+'-'+element.toDate+'-'+moment(this.range['end']).format('YYYY')\n            // check condition\n            if  (  startDate >= fromDate && startDate <=  endDate ||  toDate >= fromDate && toDate <=  endDate  ){\n              // return an array with the special day period range hit by the day starting range or the day ending range\n              return true\n            }\n          });\n          if (resultProductData != ''){\n            //THERE ARE SPECIAL DATE IN THE SELECTED RANGE OF DATE\n            let difference = this.range['start'] - this.range['end']\n            let daysdifference = Math.ceil(difference / (1000 * 3600 * 24));\n            let days = Math.abs(daysdifference )\n            let amount = days * this.products[0]['price'] * this.guests\n            // Partial total wihtout late checkout\n            this.onlyRoomPrice = (((amount / 100) * this.products[0].specialdayinflation) + amount)\n            //Total\n            if(this.checkoutPrice != '') {\n              this.amount = (((amount / 100) * this.products[0].specialdayinflation) + amount) + parseInt(this.checkoutPrice)\n            } else {\n              this.amount = (((amount / 100) * this.products[0].specialdayinflation) + amount)\n            }\n          } else {\n            // NO SPECIAL DATE IN THE SELECTED RANGE OF DATE\n            // Calculate how many Friday & Saturay & Sunday in the range of reservation\n            let dDate1 = new Date(this.range['start'])\n            let dDate2 = new Date(this.range['end'])\n            //We are working with time stamps\n            let from = dDate1.getTime()\n            let to = dDate2.getTime()\n            let tempDate = new Date()\n            let count = 0;\n            //loop through each day between the dates 86400000 = 1 day\n            for(let _from = from; _from < to; _from += 86400000){\n              //set the day\n              tempDate.setTime(_from);\n              //If it is a weekend add 1 to count\n              if ((tempDate.getDay() <= 0) || (tempDate.getDay() >= 4)) {\n                count++;\n              }\n            }\n            if(count == 0){\n              //  NO WEEKEND BETWEEN RANGE OF DATE\n              // Total number of day from dates range picker\n              let difference = this.range['start'] - this.range['end']\n              let daysdifference = Math.ceil(difference / (1000 * 3600 * 24));\n              let days = Math.abs(daysdifference )\n              // Total\n              let amount = days * this.products[0]['price'] * this.guests\n              // Partial total wihtout late checkout\n              this.onlyRoomPrice = amount\n              // Total\n              if(this.checkoutPrice != '') {\n                this.amount = amount + parseInt(this.checkoutPrice)\n              } else {\n                this.amount = amount\n              }\n            } else {\n              // THERE IS WEEKEND BETWEEN RANGE OF DATE\n              // Total number of day from dates range picker\n              let difference = this.range['start'] - this.range['end']\n              let daysdifference = Math.ceil(difference / (1000 * 3600 * 24));\n              let days = Math.abs(daysdifference )\n              //sistem count the weekend days but reservation sistem is based on night so -1\n              let night = count -1\n              // Amount for weekend nights\n              let weekend = night * this.products[0]['price'] * this.guests\n              // Adding inflation for weekend nights\n              let weekendTotal = (((weekend / 100) * this.products[0].weekendinflation) + weekend)\n              // Number of week days\n              let weekday = days - night\n              // Amount for week nights\n              let weekdayTotal = weekday * this.products[0]['price'] * this.guests\n              // Partial total wihtout late checkout\n              this.onlyRoomPrice = weekendTotal + weekdayTotal\n              // Total\n              if(this.checkoutPrice != '') {\n                this.amount = weekendTotal + weekdayTotal + parseInt(this.checkoutPrice)\n              }\n              else{\n                this.amount = weekendTotal + weekdayTotal\n              }\n            }\n          }\n        }\n      }\n    },\n\n    additional(){\n\n      let additionalAmount  = this.additionals.map(element => {\n        return{id:element.id, name:element.name, description:element.description, price:element.price, quantity: element.quantity, total:(element.price* element.quantity)}\n      });\n\n\n      this.add = additionalAmount\n\n      let total = additionalAmount.reduce(function(prev, cur) {\n        return prev + cur.total;\n      }, 0);\n\n      this.additionalAmount = total\n      this.amount = parseInt(this.additionalAmount) + parseInt(this.reservation.amount)\n\n    },\n\n    refresh(){\n      this.$router.go()\n    },\n\n    confirmation(){\n      let language = 'FR'\n      let transactionID = 'admin reservation'\n      let cardBrand = 'no card required'\n      let lastFour = 'admin account'\n      let expire = 'no expire date'\n      let user_id = this.setUser.id\n      let product_id = '1'\n      let startdate = moment(this.secondstage.start).format('YYYY-M-DD')\n      let finishdate = moment(this.secondstage.end).format('YYYY-M-DD')\n      let starttime = this.secondstage.checkOutStart\n      let finishtime = this.secondstage.checkOutEnd\n      let slot_id = this.secondstage.slot\n      let fullday = '1'\n      let guests = this.secondstage.guests\n      let amount = parseInt(this.amount)\n\n      this.axios.post(process.env.VUE_APP_URL_API + 'api/adminreservation',\n          {\n            user_id,\n            product_id,\n            startdate,\n            finishdate,\n            starttime,\n            finishtime,\n            slot_id,\n            fullday,\n            guests,\n            transactionID,\n            cardBrand,\n            lastFour,\n            expire,\n            amount,\n            language\n          })\n          .then((response) => {\n            console.log(response.data.id)\n            let extras = this.add.map(element => this.axios.post(process.env.VUE_APP_URL_API + 'api/extras',{reservation_id: response.data.id, name: element.name, price:element.price, quantity:element.quantity  }))\n            console.log(extras)\n\n          })\n          .catch((error) => {\n            this.error = error.response.data.message;\n          });\n\n      if(this.error != ''){\n\n        this.additionalAmount = ''\n        this.range = ''\n        this.guests = ''\n        this.addAdditional = ''\n        this.amount = ''\n        this.success = 'Successfully book'\n        this.$store.commit('clearReservation')\n        this.$store.commit('clearAdditionals')\n        this.$store.commit('cleartotalAmount')\n        this.$store.commit('clearlateCheckout')\n\n        this.error = 'Something goes wrong please try again'\n\n      } else {\n        this.additionalAmount = ''\n        this.range = ''\n        this.guests = ''\n        this.addAdditional = ''\n        this.amount = ''\n        this.success = 'Successfully book'\n        this.$store.commit('clearReservation')\n        this.$store.commit('clearAdditionals')\n        this.$store.commit('cleartotalAmount')\n        this.$store.commit('clearlateCheckout')\n      }\n    },\n\n\n    next( range, amount, guests ){\n      if(this.amount == ''|| this.onlyRoomPrice ==''){\n        this.emptySelection = 'Please fill all the field necessary to complete your reservation '\n      } else {\n\n        let fromDate = this.range.start\n        let toDate = this.range.end\n        if(this.checkoutPrice == '') {\n          this.checkoutPrice = 0\n        }\n        if(this.checkOutStart ==\"\"){\n          this.checkOutStart = this.lateCheckout[0]['start']\n        }\n        if(this.checkOutEnd ==\"\"){\n          this.checkOutEnd = this.lateCheckout[0]['end']\n        }\n        if(this.checkOutSlot==\"\"){\n          this.checkOutSlot = this.lateCheckout[0]['slot']\n        }\n\n        const book =\n            {\n              start: fromDate,\n              end:toDate,\n              dates: range,\n              amount: amount,\n              guests: guests,\n              slot: this.checkOutSlot,\n              onlyRoomPrice: this.onlyRoomPrice,\n              checkoutPrice: this.checkoutPrice,\n              checkOutStart:this.checkOutStart,\n              checkOutEnd: this.checkOutEnd,\n            }\n\n        // this.$store.commit('lateCheckout', (this.checkoutPrice))\n        this.$store.commit('setReservation', (book))\n        this.addAdditional = 1\n      }\n    },\n\n  },\n\n\n  /* eslint-disable */\n  watch: {\n    'additionalAmount': function(val, oldVal){\n      if (val != '') {\n        const amount = this.amount\n        this.amount= (amount - oldVal + val);\n      }else{\n        const amount = this.amount\n        this.amount= (amount - oldVal + val);\n      }\n    }\n  },\n\n\n  data(){\n    return{\n      orders : [],\n      facet: [],\n      searchQuery: null,\n\n      add:'',\n      additionals:'',\n      additionalAmount:'',\n      error:'',\n      success:'',\n\n      lateCheckout:'',\n      numberOfPeopleFullDay:'',\n      specialday:'',\n      PreSelectedCheckOut:[{name: 'Make your choise', price: 0,}],\n      NumPeople:[{name: 'Make your choise'}],\n      emptySelection:'',\n      onlyRoomPrice:'',\n      checkoutPrice:'',\n      checkOutSlot: 1,\n      checkOutStart:'',\n      checkOutEnd: '',\n      emptyGuests:'',\n      dates:'',\n      slots:'',\n      timeslots:'',\n      fulldays:'',\n      guests:'',\n      amount:'',\n      products:'',\n      disabledDays: [],\n      disableCalendar:[],\n      reservations:'',\n      range:'',\n      matchSpecialDay: '',\n      addAdditional:'',\n    }\n  },\n\n\n  setup() {\n    return {\n      tabs,\n      data,\n      moment\n    }\n  },\n\n\n  components: {\n    RefreshIcon,\n    CreditCardIcon,\n    ChevronDownIcon,\n    Disclosure,\n    DisclosureButton,\n    DisclosurePanel,\n    TrashIcon,\n    CheckIcon,\n    SelectorIcon,\n    XCircleIcon,\n    XIcon,\n    Listbox,\n    ListboxButton,\n    ListboxLabel,\n    ListboxOption,\n    ListboxOptions,\n  },\n}\n</script>\n\n<style>\n.mycustomcalendar{\n  background: rgb(249, 250, 251);\n  border-radius: 0;\n  border: none;\n}\n/* COLOR WEEKDAY */\n/* .vc-weekday{\n  color:#2D3748;\n} */\n</style>\n\n"]}]}